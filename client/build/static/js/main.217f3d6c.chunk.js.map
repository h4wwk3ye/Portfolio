{"version":3,"sources":["components/NavBar/Drawer.js","atoms.js","services/getProfileFromURL.js","utils/setAuthToken.js","services/getCurrentUserProfile.js","components/NavBar/Tabs.js","components/NavBar/NavBar.js","components/User/UserTheme.js","components/Name/NameTheme.js","components/Name/Name.js","components/WaveAnimation/WaveAnimation.js","components/User/Home.js","components/CodingImage/CodingImageTheme.js","components/CodingImage/CodingImage.js","components/AboutMe/AboutMeTheme.js","components/AboutMe/AboutMe.js","components/User/About.js","components/Education/EducationTheme.js","components/Education/Education.js","components/Experiences/ExperiencesTheme.js","components/Experiences/Experiences.js","components/Skills/SkillsTheme.js","components/Skills/Skills.js","components/User/Profile.js","components/ListProjects/ListProjectsTheme.js","components/ListProjects/ListProjects.js","components/User/Projects.js","components/Loading/LoadingAnimationTheme.js","components/Loading/LoadingAnimation.js","components/ListContacts/ListContactsTheme.js","components/ListContacts/ListContacts.js","components/User/Contact.js","components/Footer/FooterTheme.js","components/Footer/Footer.js","components/User/User.js","components/shared/SignUpLoginButton.js","components/Register/RegisterTheme.js","components/shared/ToastNotification.js","services/registerUser.js","components/Register/Register.js","components/Login/LoginTheme.js","services/loginUser.js","services/getUserFromToken.js","components/Login/Login.js","components/EditProfile/EditProfileTheme.js","components/shared/ConfirmationDialog.js","components/EditProfile/SocialMediaDetails.js","components/EditProfile/PersonalDetails.js","components/EditProfile/ProfessionalDetailComponents/SkillDetails.js","components/EditProfile/ProfessionalDetailComponents/EducationDetails.js","components/EditProfile/ProfessionalDetailComponents/ProjectDetails.js","components/EditProfile/ProfessionalDetailComponents/ExperienceDetails.js","components/EditProfile/ResumeDetails.js","components/EditProfile/EditProfile.js","PrivateRoute.js","App.js","Theme.js","index.js","components/NavBar/NavBarTheme.js","components/NavBar/routeOptions.js"],"names":["value","handleChange","handleSetActive","classes","useStyles","React","useState","open","setOpen","iOS","process","browser","test","navigator","userAgent","Fragment","disableBackdropTransition","disableDiscovery","anchor","onClose","onOpen","paper","drawerContainer","disablePadding","container","direction","className","drawerList","routeOptions","map","route","index","item","key","uuid","button","selected","component","Link","to","activeClass","smooth","offset","spy","onSetActive","onClick","e","ignoreCancelEvents","root","drawerTab","drawerTabSelected","src","alt","icon","primary","string","charAt","toUpperCase","slice","closeButton","drawerIcon","drawerIconContainer","profileState","atom","default","authState","token","localStorage","getItem","isAuthenticated","user","getProfile","id","a","console","log","baseUrl","axios","get","response","data","setAuthToken","defaults","headers","common","getCurrentUserProfile","Tabs","tabContainer","onChange","Tab","tab","tabSelected","label","ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","cloneElement","elevation","NavBar","editPage","profile","useRecoilValue","theme","useTheme","removeTabs","useMediaQuery","breakpoints","down","history","useHistory","useRecoilState","auth","setAuth","setValue","_event","newValue","useEffect","Events","scrollEvent","register","element","scrollSpy","update","remove","AppBar","position","appBar","Toolbar","Typography","variant","name","noWrap","animateScroll","scrollToTop","duration","Button","removeItem","push","logOutButton","Drawer","makeStyles","home","height","sectionContainer","marginTop","containerGrid","width","margin","heading","typography","cursor","textAlign","color","palette","additional","blue","titleContainer","backgroundColor","emptyGrid","padding","transitions","colorPrimary","bar","nameContainer","left","top","WebkitTransform","transform","text","display","fontSize","lineHeight","Name","Delay","ms","smallDescription","toolbarMargin","mixins","toolbar","WaveAnimation","Home","imageContainer","grey","alignItems","justifyContent","imageContainerHoverd","hovered","programmingImage","maxHeight","maxWidth","CodingImage","visible","CodingImageTheme","setHovered","toggleHover","image","Grid","xs","md","Grow","in","timeout","Paper","onMouseEnter","onMouseLeave","darkGrey","paperHoverd","aboutContainer","subHeading","about","locationContainer","locationIcon","locationText","bottom","textTransform","resumeButton","borderColor","resumeButtonDisabled","resumeIcon","AboutMe","AboutMeTheme","LinearProgress","education","length","school","spacing","justify","href","resume","target","rel","Tooltip","title","disabled","startIcon","loc","city","country","About","aboutMe","codingImage","setVisible","matches","up","isVisible","partialVisibility","active","educationContainer","educationContainerHoverd","schoolContainer","schoolName","divider","borderTop","borderBottom","Education","EducationTheme","data-aos","edu","score","postfix","experienceContainer","experienceContainerHoverd","singleExperienceContainer","roleName","time","fontWeight","company","Experience","ExperiencesTheme","experiences","experience","role","moment","timeFrom","format","currentlyWorking","timeTo","skillsContainer","skillsContainerHoverd","allSkillsContainer","singleSkillContainer","skillName","skillIconContainer","skillIcon","Skills","SkillsTheme","setOfSkills","Set","skills","skill","has","toLowerCase","Profile","UserTheme","projectsContainer","projectsContainerHovered","expandIcon","gitLinkButton","gitLinkButtonDisabled","buttonContainer","textDecoration","externalIcon","ListProjects","ListingProjectTheme","projects","project","i","Accordion","expanded","AccordionSummary","aria-controls","AccordionDetails","description","split","line","gitLink","Projects","BorderLinearProgress","withStyles","borderRadius","type","LinearIndeterminate","progress","setProgress","timer","setInterval","oldProgress","clearInterval","contactsContainer","contactsContainerHoverd","contactIconContainer","contactIcon","contactName","allContactsContainer","singleContactContainer","ListContacts","ListContactsTheme","setOfContacts","Object","entries","connect","service","email","Contacts","fontFamily","link","shareButton","Footer","FooterTheme","onEditPage","useRouteMatch","onProfilePage","viewBox","cx","cy","r","fill","stdDeviation","result","mode","values","in2","d","xlinkHref","x","y","aria-label","_id","User","setProfile","authenticatedURL","match","getProfileFromURL","params","profileData","keys","signupButton","outline","border","WebkitAppearance","WebkitTapHighlightColor","WebkitUserSelect","MozUserSelect","userSelect","background","content","zIndex","opacity","WebkitFilter","MozFilter","filter","WebkitTransition","transition","backgroundPosition","SignUpLoginButton","mainContainer","paperContainer","headingContainer","darkGey","defaultTextFieldColor","helperText","marginLeft","backgroundImage","backgroundRepeat","backgroundSize","signupIconContainer","signupIcon","textField","signupButtonContainer","signInText","Alert","PositionedSnackbar","state","message","closeToast","severity","vertical","horizontal","Snackbar","anchorOrigin","autoHideDuration","registerUser","newUser","post","Register","RegisterTheme","password","confirmPassword","formData","setFormData","errors","setErrors","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","setMessage","setSeverity","setState","showToast","event","CssBaseline","sm","FormControl","fullWidth","InputLabel","error","OutlinedInput","labelWidth","FormHelperText","endAdornment","InputAdornment","IconButton","edge","Visibility","VisibilityOff","preventDefault","oldError","param","msg","setTimeout","signInIconContainer","signInIcon","signInButtonContainer","loginUser","getUserFromTken","Login","LoginTheme","setItem","getUserFromToken","textFieldContainer","iconContainer","endIcon","topText","marginBottom","paddingBottom","accordion","uploadContainer","uploadButton","textContainer","addButton","checkBox","checked","submitButtonContainer","submitButton","dialog","boxShadow","paddingLeft","paddingRight","buttonOutlined","buttonContained","AlertDialog","openConfirmationDialog","handleCloseConfirmationDialog","setAccepted","Dialog","aria-labelledby","aria-describedby","DialogTitle","disableTypography","DialogActions","SocialMedia","EditProfileTheme","setOpenConfirmationDialog","accepted","setName","clearText","defaultExpanded","TextField","facebook","InputProps","startAdornment","placeholder","instagram","linkedin","github","twitter","steam","PersonalDetails","required","multiline","address","accept","hidden","files","htmlFor","SkillDetails","Index","setIndex","splice","removeSkill","style","EducationDetails","smallerThanSm","eduScore","removeEducation","Math","ceil","formControl","Select","MenuItem","ProjectDetails","removeProject","ExperienceDetails","handleDateChange","newDate","toDate","removeExperience","utils","MomentUtils","inputVariant","views","keyboardIcon","FormControlLabel","control","Checkbox","Date","now","ResumeDetails","EditProfile","setUser","newProfile","setNewProfile","emptyState","userData","elavation","FormData","arr","File","append","JSON","stringify","go","PrivateRoute","Component","rest","render","App","exact","path","createBreakpoints","createPallete","Theme","createMuiTheme","main","lightPurple","h4","letterSpacing","overrides","MuiOutlinedInput","borderWidth","MuiFormLabel","MuiCheckbox","colorSecondary","ReactDOM","ThemeProvider","document","getElementById","minWidth","verticalAlign","marginRight","red"],"mappings":"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","file":"static/js/main.217f3d6c.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  SwipeableDrawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Grid,\n} from '@material-ui/core';\nimport { Link } from 'react-scroll';\nimport { v4 as uuid } from 'uuid'; // for generating random keys\nimport useStyles from './NavBarTheme';\nimport routeOptions from './routeOptions';\n\nexport default function ({ value, handleChange, handleSetActive }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  return (\n    <React.Fragment>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        anchor='top'\n        open={open}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        classes={{\n          paper: classes.drawerContainer,\n        }}\n      >\n        <List disablePadding>\n          <Grid container>\n            <Grid container direction='column' className={classes.drawerList}>\n              {routeOptions.map((route, index) => (\n                <Grid item key={uuid()}>\n                  <ListItem\n                    button\n                    selected={value === index}\n                    component={Link}\n                    to={route}\n                    activeClass={route}\n                    smooth={true}\n                    offset={-100}\n                    spy={true}\n                    onSetActive={handleSetActive}\n                    onClick={e => {\n                      setOpen(false);\n                      handleChange(e, index);\n                    }}\n                    ignoreCancelEvents={true}\n                    classes={{\n                      root: classes.drawerTab,\n                      selected: classes.drawerTabSelected,\n                    }}\n                  >\n                    <ListItemIcon>\n                      <img\n                        src={`/images/${route}.svg`}\n                        alt={route}\n                        className={classes.icon}\n                      />\n                    </ListItemIcon>\n                    <ListItemText primary={capitalizeFirstLetter(route)} />\n                  </ListItem>\n                </Grid>\n              ))}\n            </Grid>\n            <Grid item className={classes.closeButton}>\n              <IconButton onClick={() => setOpen(!open)}>\n                <img\n                  src='/images/close.svg'\n                  alt='close'\n                  className={classes.drawerIcon}\n                />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </List>\n      </SwipeableDrawer>\n      <IconButton\n        onClick={() => setOpen(!open)}\n        className={classes.drawerIconContainer}\n      >\n        <img src='/images/menu.svg' alt='menu' className={classes.drawerIcon} />\n      </IconButton>\n    </React.Fragment>\n  );\n}\n","import { atom } from 'recoil';\n\nexport const profileState = atom({\n  key: 'profileState',\n  default: {},\n});\n\nexport const authState = atom({\n  key: 'auth',\n  default: {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    user: null,\n  },\n});\n","import axios from 'axios';\n\nconst getProfile = async id => {\n  console.log(id);\n  const baseUrl = `/api/profile/user/${id}`;\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nexport default getProfile;\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\n\nconst getCurrentUserProfile = async () => {\n  try {\n    setAuthToken(localStorage.getItem('token'));\n    const response = await axios.get('/api/profile/me');\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\n\nexport default getCurrentUserProfile;\n","import React from 'react';\nimport { Tabs, Tab } from '@material-ui/core';\nimport { Link } from 'react-scroll';\nimport { v4 as uuid } from 'uuid'; // for generating random keys\nimport useStyles from './NavBarTheme';\nimport routeOptions from './routeOptions';\n\nexport default function ({ value, handleChange, handleSetActive }) {\n  const classes = useStyles();\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  return (\n    <Tabs\n      className={classes.tabContainer}\n      value={value}\n      onChange={handleChange}\n    >\n      {routeOptions.map(route => (\n        <Tab\n          key={uuid()}\n          classes={{\n            root: classes.tab,\n            selected: classes.tabSelected,\n          }}\n          label={\n            <div>\n              <img\n                src={`/images/${route}.svg`}\n                alt={route}\n                className={classes.icon}\n              />\n              {capitalizeFirstLetter(route)}\n            </div>\n          }\n          component={Link}\n          to={route}\n          activeClass={route}\n          smooth={true}\n          offset={-100}\n          spy={true}\n          onSetActive={handleSetActive}\n          ignoreCancelEvents={true}\n        />\n      ))}\n    </Tabs>\n  );\n}\n","import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  useScrollTrigger,\n  Typography,\n  useMediaQuery,\n  useTheme,\n  Button,\n} from '@material-ui/core';\nimport { Events, scrollSpy, animateScroll } from 'react-scroll';\nimport useStyles from './NavBarTheme';\nimport { useRecoilValue, useRecoilState } from 'recoil';\nimport { profileState } from '../../atoms';\nimport Tabs from './Tabs';\nimport Drawer from './Drawer';\nimport { useHistory } from 'react-router-dom';\nimport { authState } from '../../atoms';\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nexport default function NavBar({ editPage = false }) {\n  const classes = useStyles();\n  const profile = useRecoilValue(profileState);\n  const theme = useTheme();\n  const removeTabs = useMediaQuery(theme.breakpoints.down('md'));\n  const history = useHistory();\n  const [auth, setAuth] = useRecoilState(authState);\n\n  // This is for detrmining the active tab\n  const [value, setValue] = React.useState(0);\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n\n  React.useEffect(() => {\n    Events.scrollEvent.register('begin', function (to, element) {\n      // console.log(to, arguments);\n    });\n\n    Events.scrollEvent.register('end', function (to, element) {\n      // console.log(to, arguments);\n      if (to === 'home') {\n        setValue(0);\n      } else if (to === 'about') {\n        setValue(1);\n      } else if (to === 'profile') {\n        setValue(2);\n      } else if (to === 'projects') {\n        setValue(3);\n      } else if (to === 'contact') {\n        setValue(4);\n      }\n    });\n\n    scrollSpy.update();\n\n    return () => {\n      Events.scrollEvent.remove('begin');\n      Events.scrollEvent.remove('end');\n    };\n  }, []);\n\n  // This is determined from the active class of the tab by using Link of react-scroll\n  const handleSetActive = to => {\n    if (to === 'home') {\n      setValue(0);\n    } else if (to === 'about') {\n      setValue(1);\n    } else if (to === 'profile') {\n      setValue(2);\n    } else if (to === 'projects') {\n      setValue(3);\n    } else if (to === 'contact') {\n      setValue(4);\n    }\n  };\n\n  const scrollTop = () => {\n    animateScroll.scrollToTop({\n      duration: 500,\n      smooth: 'easeInQuad',\n    });\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setAuth({\n      token: localStorage.getItem('token'),\n      isAuthenticated: false,\n      user: null,\n    });\n    history.push('/login');\n  };\n\n  return (\n    <React.Fragment>\n      <ElevationScroll>\n        <AppBar position='sticky' className={classes.appBar}>\n          <Toolbar>\n            <Typography\n              variant='h4'\n              className={classes.name}\n              noWrap\n              onClick={scrollTop}\n            >\n              {editPage ? auth.user.name : profile.user.name}\n              {/* {`${profile && profile.user ? profile.user.name : ''}`} */}\n            </Typography>\n            {/* Showing logout button on edit page */}\n            {editPage ? (\n              <Button\n                variant='contained'\n                onClick={handleLogout}\n                className={classes.logOutButton}\n              >\n                Log Out\n              </Button>\n            ) : !removeTabs ? (\n              <Tabs\n                value={value}\n                handleChange={handleChange}\n                handleSetActive={handleSetActive}\n              />\n            ) : (\n              <Drawer\n                value={value}\n                handleChange={handleChange}\n                handleSetActive={handleSetActive}\n              />\n            )}\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n    </React.Fragment>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  home: {\n    height: '100vh',\n  },\n  sectionContainer: {\n    marginTop: 100,\n    [theme.breakpoints.down('xs')]: {\n      marginTop: 50,\n    },\n  },\n  containerGrid: {\n    width: '100%',\n    margin: '0 auto',\n    height: '100%',\n  },\n\n  heading: {\n    ...theme.typography.heading,\n    cursor: 'pointer',\n    textAlign: 'center',\n    color: theme.palette.additional.blue,\n  },\n  titleContainer: {\n    backgroundColor: '#fff',\n    // backgroundColor: theme.palette.additional.grey,\n    width: '100%',\n  },\n  emptyGrid: {\n    padding: '0 !important',\n  },\n  // **** these 3 are for progress bar\n  root: {\n    ...theme.transitions.root,\n  },\n  colorPrimary: {\n    ...theme.transitions.colorPrimary,\n  },\n  bar: {\n    ...theme.transitions.bar,\n  },\n  // ****\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  nameContainer: {\n    color: '#ffffff',\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    WebkitTransform: 'translate(-50%, -50%)',\n    transform: 'translate(-50%, -50%)',\n  },\n  text: {\n    display: 'inline-block',\n    textAlign: 'center',\n    fontSize: '1em',\n    lineHeight: '2em',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '0.7em',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\nimport Typist from 'react-typist';\nimport useStyles from './NameTheme';\n\nexport default function Name() {\n  const classes = useStyles();\n  const profile = useRecoilValue(profileState);\n\n  return (\n    <Typography variant='h4' className={classes.nameContainer}>\n      <div className={classes.text}>\n        <Typist>\n          {`Hi, there \\n I'm ${profile.user.name}. `}\n          <Typist.Delay ms={1000} />\n          <br />\n          {`I'm a ${profile.smallDescription}.`}\n        </Typist>\n      </div>\n    </Typography>\n  );\n}\n","import React from 'react';\nimport './waveAnimation.css';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n  },\n}));\n\nexport default function WaveAnimation() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <div className={classes.toolbarMargin}></div>\n      <div className='waveWrapper waveAnimation'>\n        <div className='waveWrapperInner bgTop'>\n          <div className='wave waveTop' />\n        </div>\n        <div className='waveWrapperInner bgMiddle'>\n          <div className='wave waveMiddle' />\n        </div>\n        <div className='waveWrapperInner bgBottom'>\n          <div className='wave waveBottom' />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport useStyles from './UserTheme';\nimport { Element } from 'react-scroll';\n\nimport Name from '../Name/Name';\nimport WaveAnimation from '../WaveAnimation/WaveAnimation';\n\nexport default function Home() {\n  const classes = useStyles();\n  return (\n    <Element name='home' className={classes.home}>\n      <Name />\n      <WaveAnimation />\n    </Element>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  imageContainer: {\n    backgroundColor: theme.palette.additional.grey,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15,\n    width: '100%',\n  },\n  imageContainerHoverd: {\n    backgroundColor: theme.palette.additional.grey,\n    ...theme.transitions.hovered,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15,\n    width: '100%',\n  },\n  programmingImage: {\n    maxHeight: 500,\n    maxWidth: 800,\n    width: '100%',\n    height: 'auto',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Grid, Paper, Grow } from '@material-ui/core';\nimport CodingImageTheme from './CodingImageTheme';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\n\nexport default function CodingImage({ visible }) {\n  const classes = CodingImageTheme();\n  const profile = useRecoilValue(profileState);\n  const [hovered, setHovered] = React.useState(false);\n  const toggleHover = () => setHovered(!hovered);\n\n  return profile.image && profile.image !== '' ? (\n    <Grid item container xs={12} md={6}>\n      <Grow in={visible} timeout={1000}>\n        <Paper\n          className={\n            hovered ? classes.imageContainerHoverd : classes.imageContainer\n          }\n          onMouseEnter={toggleHover}\n          onMouseLeave={toggleHover}\n        >\n          <img\n            src={profile.image}\n            alt='programming'\n            className={classes.programmingImage}\n          />\n        </Paper>\n      </Grow>\n    </Grid>\n  ) : null;\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: 30,\n    // backgroundColor: theme.palette.additional.grey,\n    width: '100%',\n    backgroundColor: theme.palette.additional.darkGrey,\n  },\n  paperHoverd: {\n    padding: 30,\n    // backgroundColor: theme.palette.additional.grey,\n    width: '100%',\n    backgroundColor: theme.palette.additional.darkGrey,\n    ...theme.transitions.hovered,\n  },\n  aboutContainer: {},\n  heading: {\n    ...theme.typography.heading,\n  },\n  smallDescription: {\n    ...theme.typography.subHeading,\n    marginTop: '1.5em',\n  },\n  about: {\n    ...theme.typography.text,\n    marginTop: '2.2em',\n  },\n\n  // **** these 3 are for progress bar\n  root: {\n    ...theme.transitions.root,\n  },\n  colorPrimary: {\n    ...theme.transitions.colorPrimary,\n  },\n  bar: {\n    ...theme.transitions.bar,\n  },\n  // ****\n  locationContainer: {\n    marginTop: '1em',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '2em',\n    },\n  },\n  locationIcon: {\n    height: 48,\n    width: 48,\n  },\n  locationText: {\n    ...theme.typography.subHeading,\n    margin: 0,\n    bottom: 0,\n    textTransform: 'none',\n    // color: theme.palette.additional.blue,\n    color: '#fff',\n  },\n  resumeButton: {\n    ...theme.typography.subHeading,\n    textTransform: 'none',\n    borderColor: '#fff',\n    color: '#fff',\n    textAlign: 'center',\n  },\n  resumeButtonDisabled: {\n    textTransform: 'none',\n    borderColor: 'red !important',\n    color: 'red !important',\n  },\n  resumeIcon: {\n    height: 50,\n    width: 50,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Grid, Paper, Grow, Link, Button, Tooltip } from '@material-ui/core';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\nimport AboutMeTheme from './AboutMeTheme';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nexport default function AboutMe({ visible }) {\n  const classes = AboutMeTheme();\n  const profile = useRecoilValue(profileState);\n  const [hovered, setHovered] = React.useState(false);\n  const toggleHover = () => setHovered(!hovered);\n\n  return (\n    <Grid item container xs={12} md={6}>\n      <Grow in={visible} timeout={1000}>\n        <Paper\n          className={hovered ? classes.paperHoverd : classes.paper}\n          onMouseEnter={toggleHover}\n          onMouseLeave={toggleHover}\n        >\n          <Grid item xs={12} className={classes.heading}>\n            About Me\n          </Grid>\n\n          <Grid item xs={12}>\n            <LinearProgress\n              classes={{\n                root: classes.root,\n                colorPrimary: classes.colorPrimary,\n                bar: classes.bar,\n              }}\n              // variant='determinate'\n              // value={progress}\n            />\n          </Grid>\n\n          <Grid item xs={12} className={classes.smallDescription}>\n            {profile.smallDescription}\n          </Grid>\n\n          <Grid item xs={12} className={classes.about}>\n            {profile.about}\n          </Grid>\n\n          {profile.education && profile.education.length && (\n            <Grid item xs={12} className={classes.about}>\n              {`Right now I'm, pursuing ${profile.education[0].name} from ${profile.education[0].school}.`}\n            </Grid>\n          )}\n\n          <Grid container spacing={1} justify='space-around'>\n            <Grid\n              item\n              xs={12}\n              className={classes.locationContainer}\n              component={Link}\n              href={profile.resume}\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <Tooltip title={profile.resume ? '' : 'Resume Link not provided'}>\n                <Button\n                  variant='outlined'\n                  className={classes.resumeButton}\n                  classes={{\n                    disabled: classes.resumeButtonDisabled,\n                  }}\n                  disabled={!profile.resume}\n                  startIcon={\n                    <img\n                      src='/images/resume.svg'\n                      alt='resume'\n                      className={classes.resumeIcon}\n                    />\n                  }\n                >\n                  Resume\n                </Button>\n              </Tooltip>\n            </Grid>\n\n            {profile.loc &&\n              profile.loc.city.length &&\n              profile.loc.country.length && (\n                <Grid item xs={12} className={classes.locationContainer}>\n                  <Button\n                    disabled\n                    startIcon={\n                      <img\n                        src='/images/location.svg'\n                        alt='location'\n                        className={classes.locationIcon}\n                      />\n                    }\n                  >\n                    <div className={classes.locationText}>\n                      {`Somewhere in ${profile.loc.city}, ${profile.loc.country}`}\n                    </div>\n                  </Button>\n                </Grid>\n              )}\n          </Grid>\n        </Paper>\n      </Grow>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport useStyles from './UserTheme';\nimport { Element } from 'react-scroll';\nimport { Grid, Paper, useMediaQuery, useTheme } from '@material-ui/core';\nimport { Link } from 'react-scroll';\nimport CodingImage from '../CodingImage/CodingImage';\nimport AboutMe from '../AboutMe/AboutMe';\nimport VisibilitySensor from 'react-visibility-sensor';\n\nexport default function About() {\n  const classes = useStyles();\n\n  const [visible, setVisible] = React.useState({\n    aboutMe: false,\n    codingImage: false,\n  });\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('md'));\n\n  return (\n    <Element name='about' className={classes.sectionContainer}>\n      <Grid\n        container\n        spacing={5}\n        justify='space-around'\n        className={classes.containerGrid}\n      >\n        {matches && <Grid item md={4}></Grid>}\n        <Grid item xs={12} md={4}>\n          <Grid\n            container\n            component={Link}\n            to={'about'}\n            smooth={true}\n            offset={-100}\n            ignoreCancelEvents={true}\n          >\n            <Paper className={classes.titleContainer}>\n              <Grid item xs={12} className={classes.heading}>\n                About\n              </Grid>\n              {/* <Grid item xs={12} md={10}>\n                <LinearProgress\n                  classes={{\n                    root: classes.root,\n                    colorPrimary: classes.colorPrimary,\n                    bar: classes.bar,\n                  }}\n                />\n              </Grid> */}\n            </Paper>\n          </Grid>\n        </Grid>\n        {matches && <Grid item md={4}></Grid>}\n\n        <Grid item xs={12} className={classes.emptyGrid}></Grid>\n\n        {/* <AboutMe visible={visible.aboutMe} />\n        <CodingImage visible={visible.codingImage} /> */}\n\n        <VisibilitySensor\n          onChange={isVisible => {\n            if (!visible.aboutMe)\n              setVisible({ ...visible, aboutMe: isVisible });\n          }}\n          partialVisibility\n          active={!visible.aboutMe}\n        >\n          <AboutMe visible={visible.aboutMe} />\n        </VisibilitySensor>\n\n        <VisibilitySensor\n          onChange={isVisible => {\n            if (!visible.codingImage)\n              setVisible({ ...visible, codingImage: isVisible });\n          }}\n          partialVisibility\n          active={!visible.codingImage}\n        >\n          <CodingImage visible={visible.codingImage} />\n        </VisibilitySensor>\n      </Grid>\n    </Element>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  educationContainer: {\n    padding: 30,\n    backgroundColor: theme.palette.additional.darkGrey,\n    width: '100%',\n  },\n  educationContainerHoverd: {\n    padding: 30,\n    backgroundColor: theme.palette.additional.darkGrey,\n    ...theme.transitions.hovered,\n    width: '100%',\n  },\n  // **** these 3 are for progress bar\n  root: {\n    ...theme.transitions.root,\n  },\n  colorPrimary: {\n    ...theme.transitions.colorPrimary,\n  },\n  bar: {\n    ...theme.transitions.bar,\n  },\n  // ****\n  schoolContainer: {\n    marginTop: '1.5em',\n  },\n  heading: {\n    ...theme.typography.heading,\n  },\n  schoolName: {\n    ...theme.typography.subHeading,\n  },\n  text: {\n    ...theme.typography.text,\n    marginTop: '0.7em',\n  },\n  divider: {\n    borderTop: '1px dashed #fff',\n    borderBottom: 'none',\n    marginTop: '1.5em', // same as container margin\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Grid, Paper, LinearProgress, Grow } from '@material-ui/core';\nimport EducationTheme from './EducationTheme';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\nimport { v4 as uuid } from 'uuid'; // for generating random keys\n\nexport default function Education({ visible }) {\n  const classes = EducationTheme();\n  const profile = useRecoilValue(profileState);\n  const [hovered, setHovered] = React.useState(false);\n  const toggleHover = () => setHovered(!hovered);\n\n  return profile.education.length ? (\n    <Grid item container xs={12} md={4} data-aos='fade-up'>\n      <Grow in={visible} timeout={1000}>\n        <Paper\n          className={\n            hovered\n              ? classes.educationContainerHoverd\n              : classes.educationContainer\n          }\n          onMouseEnter={toggleHover}\n          onMouseLeave={toggleHover}\n        >\n          <Grid item xs={12} className={classes.heading}>\n            Education\n          </Grid>\n          <Grid item xs={12}>\n            <LinearProgress\n              classes={{\n                root: classes.root,\n                colorPrimary: classes.colorPrimary,\n                bar: classes.bar,\n              }}\n            />\n          </Grid>\n\n          {profile.education.map((edu, index) => (\n            <Grid container className={classes.schoolContainer} key={uuid()}>\n              <Grid item xs={12} className={classes.schoolName}>\n                {edu.name}\n              </Grid>\n              <Grid item xs={12} className={classes.text}>\n                {edu.school}\n              </Grid>\n              <Grid item xs={12} className={classes.text}>\n                {`Score: ${edu.score.value} ${edu.score.postfix}`}\n              </Grid>\n              {index !== profile.education.length - 1 && (\n                <Grid item xs={12}>\n                  <hr className={classes.divider} />\n                </Grid>\n              )}\n            </Grid>\n          ))}\n        </Paper>\n      </Grow>\n    </Grid>\n  ) : null;\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  experienceContainer: {\n    padding: 30,\n    backgroundColor: theme.palette.additional.darkGrey,\n    width: '100%',\n  },\n  experienceContainerHoverd: {\n    padding: 30,\n    ...theme.transitions.hovered,\n    backgroundColor: theme.palette.additional.darkGrey,\n    width: '100%',\n  },\n  heading: {\n    ...theme.typography.heading,\n  },\n  // **** these 3 are for progress bar\n  root: {\n    ...theme.transitions.root,\n  },\n  colorPrimary: {\n    ...theme.transitions.colorPrimary,\n  },\n  bar: {\n    ...theme.transitions.bar,\n  },\n  // ****\n  singleExperienceContainer: {\n    marginTop: '1.5em',\n  },\n  roleName: {\n    ...theme.typography.subHeading,\n  },\n  time: {\n    ...theme.typography.text,\n    marginTop: '0.7em',\n    fontWeight: 500,\n  },\n  company: {\n    ...theme.typography.text,\n    marginTop: '0.7em',\n    fontWeight: 450,\n  },\n  divider: {\n    borderTop: '1px dashed #fff',\n    borderBottom: 'none',\n    marginTop: '1.5em', // same as container margin\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Grid, Paper, LinearProgress, Grow } from '@material-ui/core';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\nimport ExperiencesTheme from './ExperiencesTheme';\nimport { v4 as uuid } from 'uuid'; // for generating random keys\nimport moment from 'moment';\n\nexport default function Experience({ visible }) {\n  const classes = ExperiencesTheme();\n  const profile = useRecoilValue(profileState);\n  const [hovered, setHovered] = React.useState(false);\n  const toggleHover = () => setHovered(!hovered);\n\n  return profile.experiences.length ? (\n    <Grid item container md={4} xs={12}>\n      <Grow in={visible} timeout={1000}>\n        <Paper\n          className={\n            hovered\n              ? classes.experienceContainerHoverd\n              : classes.experienceContainer\n          }\n          onMouseEnter={toggleHover}\n          onMouseLeave={toggleHover}\n        >\n          <Grid item xs={12} className={classes.heading}>\n            Experience\n          </Grid>\n          <Grid item xs={12}>\n            <LinearProgress\n              classes={{\n                root: classes.root,\n                colorPrimary: classes.colorPrimary,\n                bar: classes.bar,\n              }}\n            />\n          </Grid>\n\n          {profile.experiences.map((experience, index) => (\n            <Grid\n              container\n              className={classes.singleExperienceContainer}\n              key={uuid()}\n            >\n              <Grid item xs={12} className={classes.roleName}>\n                {experience.role}\n              </Grid>\n              <Grid item xs={12} className={classes.time}>\n                {`${moment(experience.timeFrom).format('MMM YYYY')} - ${\n                  experience.currentlyWorking\n                    ? 'Present'\n                    : moment(experience.timeTo).format('MMM YYYY')\n                }`}\n              </Grid>\n              <Grid item xs={12} className={classes.company}>\n                {experience.name}\n              </Grid>\n              {index !== profile.experiences.length - 1 && (\n                <Grid item xs={12}>\n                  <hr className={classes.divider} />\n                </Grid>\n              )}\n            </Grid>\n          ))}\n        </Paper>\n      </Grow>\n    </Grid>\n  ) : null;\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  skillsContainer: {\n    padding: 30,\n    backgroundColor: theme.palette.additional.darkGrey,\n    width: '100%',\n  },\n  skillsContainerHoverd: {\n    padding: 30,\n    backgroundColor: theme.palette.additional.darkGrey,\n    ...theme.transitions.hovered,\n    width: '100%',\n  },\n  // **** these 3 are for progress bar\n  root: {\n    ...theme.transitions.root,\n  },\n  colorPrimary: {\n    ...theme.transitions.colorPrimary,\n  },\n  bar: {\n    ...theme.transitions.bar,\n  },\n  // ****\n  heading: {\n    ...theme.typography.heading,\n  },\n  allSkillsContainer: {\n    marginTop: 0,\n  },\n  singleSkillContainer: {\n    marginTop: '1.5em',\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '1em',\n    },\n  },\n  skillName: {\n    ...theme.typography.subHeading,\n    textAlign: 'center',\n  },\n  skillIconContainer: {\n    margin: '0 auto',\n  },\n  skillIcon: {\n    height: 50,\n    width: 50,\n    textAlign: 'center',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Grid, Paper, LinearProgress, Grow } from '@material-ui/core';\nimport SkillsTheme from './SkillsTheme';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\nimport { v4 as uuid } from 'uuid'; // for generating random keys\n\nexport default function Skills({ visible }) {\n  const classes = SkillsTheme();\n  const profile = useRecoilValue(profileState);\n  const [hovered, setHovered] = React.useState(false);\n  const toggleHover = () => setHovered(!hovered);\n\n  const setOfSkills = new Set([\n    // skills for which icon is present\n    'c++',\n    'python',\n    'javascript',\n    'mongodb',\n    'reactjs',\n    'nodejs',\n    'typescript',\n  ]);\n\n  return profile.skills.length ? (\n    <Grid item container md={4} xs={12}>\n      <Grow in={visible} timeout={1000}>\n        <Paper\n          className={\n            hovered ? classes.skillsContainerHoverd : classes.skillsContainer\n          }\n          onMouseEnter={toggleHover}\n          onMouseLeave={toggleHover}\n        >\n          <Grid item xs={12} className={classes.heading}>\n            Skills\n          </Grid>\n          <Grid item xs={12}>\n            <LinearProgress\n              classes={{\n                root: classes.root,\n                colorPrimary: classes.colorPrimary,\n                bar: classes.bar,\n              }}\n            />\n          </Grid>\n          <Grid\n            container\n            spacing={5}\n            justify='space-around'\n            className={classes.allSkillsContainer}\n          >\n            {profile.skills.map(skill => (\n              <Grid\n                item\n                container\n                direction='column'\n                xs={6}\n                className={classes.singleSkillContainer}\n                key={uuid()}\n              >\n                <Grid item xs={12} className={classes.skillIconContainer}>\n                  {setOfSkills.has(skill.toLowerCase()) ? (\n                    <img\n                      src={`/images/skills/${skill.toLowerCase()}.svg`}\n                      alt={skill}\n                      className={classes.skillIcon}\n                    />\n                  ) : (\n                    <img\n                      src={`/images/skills/defaultSkill.svg`}\n                      alt={skill}\n                      className={classes.skillIcon}\n                    />\n                  )}\n                </Grid>\n                <Grid item xs={12} className={classes.skillName}>\n                  {skill}\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n        </Paper>\n      </Grow>\n    </Grid>\n  ) : null;\n}\n","import React from 'react';\nimport UserTheme from './UserTheme';\nimport { Element } from 'react-scroll';\nimport { Grid, Paper, useMediaQuery, useTheme } from '@material-ui/core';\nimport { Link } from 'react-scroll';\nimport Education from '../Education/Education';\nimport Experience from '../Experiences/Experiences';\nimport Skills from '../Skills/Skills';\nimport VisibilitySensor from 'react-visibility-sensor';\n\nexport default function Profile() {\n  const classes = UserTheme();\n  const [visible, setVisible] = React.useState({\n    education: false,\n    experience: false,\n    skills: false,\n  });\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('md'));\n\n  return (\n    <Element name='profile' className={classes.sectionContainer}>\n      <Grid\n        container\n        spacing={5}\n        justify='space-around'\n        className={classes.containerGrid}\n      >\n        {matches && <Grid item md={4}></Grid>}\n        <Grid item xs={12} md={4}>\n          <Grid\n            container\n            component={Link}\n            to={'profile'}\n            smooth={true}\n            offset={-100}\n            ignoreCancelEvents={true}\n          >\n            <Paper className={classes.titleContainer}>\n              <Grid item xs={12} className={classes.heading}>\n                Profile\n              </Grid>\n              {/* <Grid item xs={12} md={10}>\n                <LinearProgress\n                  classes={{\n                    root: classes.root,\n                    colorPrimary: classes.colorPrimary,\n                    bar: classes.bar,\n                  }}\n                />\n              </Grid> */}\n            </Paper>\n          </Grid>\n        </Grid>\n        {matches && <Grid item md={4}></Grid>}\n\n        <Grid item xs={12} className={classes.emptyGrid}></Grid>\n\n        <VisibilitySensor\n          onChange={isVisible => {\n            if (!visible.education)\n              setVisible({ ...visible, education: isVisible });\n          }}\n          partialVisibility\n          active={!visible.education}\n        >\n          <Education visible={visible.education} />\n        </VisibilitySensor>\n\n        <VisibilitySensor\n          onChange={isVisible => {\n            if (!visible.experience)\n              setVisible({\n                ...visible,\n                experience: isVisible,\n              });\n          }}\n          partialVisibility\n          active={!visible.experience}\n        >\n          <Experience visible={visible.experience} />\n        </VisibilitySensor>\n\n        <VisibilitySensor\n          onChange={isVisible => {\n            if (!visible.skills)\n              setVisible({\n                ...visible,\n                skills: isVisible,\n              });\n          }}\n          partialVisibility\n          active={!visible.skills}\n        >\n          <Skills visible={visible.skills} />\n        </VisibilitySensor>\n      </Grid>\n    </Element>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  projectsContainer: {\n    padding: 15,\n    backgroundColor: theme.palette.additional.darkGrey,\n    // width: '100%',\n  },\n  projectsContainerHovered: {\n    padding: 15,\n    backgroundColor: theme.palette.additional.darkGrey,\n    // width: '100%',\n    ...theme.transitions.hovered,\n  },\n  heading: {\n    ...theme.typography.subHeading,\n  },\n\n  expandIcon: {\n    height: 30,\n    width: 30,\n    color: 'white',\n  },\n  text: {\n    ...theme.typography.text,\n  },\n  gitLinkButton: {\n    ...theme.typography.subHeading,\n    textTransform: 'none',\n    borderColor: theme.palette.additional.blue,\n    color: theme.palette.additional.blue,\n    textAlign: 'center',\n  },\n  gitLinkButtonDisabled: {\n    textTransform: 'none',\n    borderColor: 'red !important',\n    color: 'red !important',\n  },\n  buttonContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textDecoration: 'none',\n  },\n  externalIcon: {\n    height: 25,\n    width: 25,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport {\n  Grid,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  AccordionDetails,\n  Grow,\n  Button,\n  Link,\n  Tooltip,\n} from '@material-ui/core';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\nimport { v4 as uuid } from 'uuid'; // for generating random keys\nimport ListingProjectTheme from './ListProjectsTheme';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport default function ListProjects({ visible }) {\n  const classes = ListingProjectTheme();\n  const profile = useRecoilValue(profileState);\n\n  return profile.projects.length ? (\n    <React.Fragment>\n      {profile.projects.map((project, i) => (\n        <Grid item md={4} xs={12} key={i}>\n          <Grow in={visible} timeout={1000}>\n            <Accordion // hovering shadow this type on expansion\n              className={classes.projectsContainer}\n              classes={{\n                expanded: classes.projectsContainerHovered,\n              }}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n                aria-controls='panel1a-content'\n                id='panel1a-header'\n              >\n                <Typography className={classes.heading}>\n                  {project.name}\n                </Typography>\n              </AccordionSummary>\n\n              <AccordionDetails>\n                <div className={classes.text}>\n                  {project.description\n                    ? project.description\n                        .split('\\n')\n                        .map(line => <p key={uuid()}> {'• ' + line} </p>)\n                    : // spilts by new line and adds a bullet point\n                      ''}\n                </div>\n              </AccordionDetails>\n              <Grid container>\n                <Grid\n                  item\n                  xs={12}\n                  className={classes.buttonContainer}\n                  // Link part\n                  component={Link}\n                  href={\n                    project.gitLink && project.gitLink !== ''\n                      ? `${project.gitLink}`\n                      : null\n                  }\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  <Tooltip\n                    title={project.gitLink ? '' : 'Git Link not provided'}\n                  >\n                    {/* span inorder to make tooltip work. It doesnt work with disabled button */}\n                    <span>\n                      <Button\n                        className={classes.gitLinkButton}\n                        classes={{\n                          disabled: classes.gitLinkButtonDisabled,\n                        }}\n                        disabled={!project.gitLink}\n                        variant='outlined'\n                        startIcon={\n                          <img\n                            src='/images/externalLink.svg'\n                            alt='external'\n                            className={classes.externalIcon}\n                          />\n                        }\n                      >\n                        Git Link\n                      </Button>\n                    </span>\n                  </Tooltip>\n                </Grid>\n              </Grid>\n            </Accordion>\n          </Grow>\n        </Grid>\n      ))}\n    </React.Fragment>\n  ) : null;\n}\n","import React from 'react';\nimport useStyles from './UserTheme';\nimport { Element } from 'react-scroll';\nimport { Grid, Paper, useMediaQuery, useTheme } from '@material-ui/core';\nimport { Link } from 'react-scroll';\nimport ListProjects from '../ListProjects/ListProjects';\nimport VisibilitySensor from 'react-visibility-sensor';\n\nexport default function Projects() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('md'));\n\n  const [visible, setVisible] = React.useState(false);\n\n  return (\n    <Element name='projects' className={classes.sectionContainer}>\n      <Grid\n        container\n        spacing={5}\n        justify='space-around'\n        className={classes.containerGrid}\n      >\n        {matches && <Grid item md={4}></Grid>}\n        <Grid item xs={12} md={4}>\n          <Grid\n            container\n            component={Link}\n            to={'projects'}\n            smooth={true}\n            offset={-100}\n            ignoreCancelEvents={true}\n          >\n            <Paper className={classes.titleContainer}>\n              <Grid item xs={12} className={classes.heading}>\n                Projects\n              </Grid>\n              {/* <Grid item xs={12} md={10}>\n                <LinearProgress\n                  classes={{\n                    root: classes.root,\n                    colorPrimary: classes.colorPrimary,\n                    bar: classes.bar,\n                  }}\n                />\n              </Grid> */}\n            </Paper>\n          </Grid>\n        </Grid>\n        {matches && <Grid item md={4}></Grid>}\n\n        <Grid item xs={12} className={classes.emptyGrid}></Grid>\n        <Grid\n          container\n          justify='space-around'\n          spacing={5}\n          className={classes.containerGrid}\n        >\n          <VisibilitySensor\n            onChange={isVisible => {\n              if (!visible) {\n                setVisible(isVisible);\n              }\n            }}\n            partialVisibility\n            active={!visible}\n          >\n            <ListProjects visible={visible} />\n          </VisibilitySensor>\n        </Grid>\n      </Grid>\n    </Element>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport useStyles from './LoadingAnimationTheme';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    marginTop: '50vh',\n    width: '30vw',\n    margin: '0 auto',\n  },\n  colorPrimary: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#1a90ff',\n  },\n}))(LinearProgress);\n\nexport default function LinearIndeterminate() {\n  const classes = useStyles();\n\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(oldProgress => {\n        if (oldProgress === 1000) return 0;\n        return oldProgress + 10;\n      });\n    }, 67); // 67 because this fits well with 1 sec inital timer\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress\n        variant='determinate'\n        value={progress}\n        color='secondary'\n      />\n      <BorderLinearProgress color='secondary' />\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  contactsContainer: {\n    padding: 30,\n    backgroundColor: theme.palette.additional.darkGrey,\n    width: '100%',\n  },\n  contactsContainerHoverd: {\n    padding: 30,\n    ...theme.transitions.hovered,\n    backgroundColor: theme.palette.additional.darkGrey,\n    width: '100%',\n  },\n  containerGrid: {\n    width: '100%',\n    margin: '0 auto',\n    height: '100%',\n  },\n\n  heading: {\n    ...theme.typography.heading,\n  },\n  // **** these 3 are for progress bar\n  root: {\n    ...theme.transitions.root,\n  },\n  colorPrimary: {\n    ...theme.transitions.colorPrimary,\n  },\n  bar: {\n    ...theme.transitions.bar,\n  },\n  // ****\n  contactIconContainer: {\n    margin: '0 auto',\n  },\n  contactIcon: {\n    height: 50,\n    width: 50,\n    textAlign: 'center',\n  },\n  contactName: {\n    ...theme.typography.subHeading,\n    textAlign: 'center',\n  },\n  allContactsContainer: {\n    marginTop: 0,\n  },\n  singleContactContainer: {\n    marginTop: '1.5em',\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '1em',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport {\n  Grid,\n  Paper,\n  Grow,\n  Link,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { useRecoilValue } from 'recoil';\nimport { profileState } from '../../atoms';\nimport ListContactsTheme from './ListContactsTheme';\nimport { v4 as uuid } from 'uuid'; // for generating random keys\n\nexport default function ListContacts({ visible }) {\n  const classes = ListContactsTheme();\n  const profile = useRecoilValue(profileState);\n  const [hovered, setHovered] = React.useState(false);\n  const toggleHover = () => setHovered(!hovered);\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('md'));\n\n  const setOfContacts = new Set([\n    // skills for which icon is present\n    'facebook',\n    'twitter',\n    'instagram',\n    'linkedin',\n    'github',\n    'steam',\n  ]);\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  return (\n    <Grid\n      container\n      justify='space-around'\n      spacing={5}\n      className={classes.containerGrid}\n    >\n      {matches && <Grid item md={3}></Grid>}\n      <Grow in={visible} timeout={1000}>\n        <Grid item container xs={12} md={6}>\n          <Paper\n            className={\n              hovered\n                ? classes.contactsContainerHoverd\n                : classes.contactsContainer\n            }\n            onMouseEnter={toggleHover}\n            onMouseLeave={toggleHover}\n          >\n            <Grid\n              container\n              spacing={5}\n              justify='space-around'\n              className={classes.allContactsContainer}\n            >\n              {Object.entries(profile.connect).map(\n                service =>\n                  service[1] !== '' && (\n                    <Grid\n                      item\n                      container\n                      direction='column'\n                      xs={6}\n                      key={uuid()}\n                      className={classes.singleContactContainer}\n                      // Link Part\n                      component={Link}\n                      href={`${service[1]}`}\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      <Grid\n                        item\n                        xs={12}\n                        className={classes.contactIconContainer}\n                      >\n                        {setOfContacts.has(service[0].toLowerCase()) ? (\n                          <img\n                            src={`/images/contact/${service[0].toLowerCase()}.svg`}\n                            alt={service[0]}\n                            className={classes.contactIcon}\n                          />\n                        ) : (\n                          <img\n                            src={`/images/contact/defaultcontact.svg`}\n                            alt={service[0]}\n                            className={classes.contactIcon}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={12} className={classes.contactName}>\n                        {capitalizeFirstLetter(service[0])}\n                      </Grid>\n                    </Grid>\n                  )\n              )}\n\n              {/* Email */}\n              <Grid\n                item\n                container\n                direction='column'\n                xs={6}\n                key={uuid()}\n                className={classes.singleContactContainer}\n                // Link Part\n                component={Link}\n                href={`mailto:${profile.user.email}`}\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                <Grid item xs={12} className={classes.contactIconContainer}>\n                  <img\n                    src={`/images/contact/email.svg`}\n                    alt='email'\n                    className={classes.contactIcon}\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.contactName}>\n                  Email\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grow>\n      {matches && <Grid item md={3}></Grid>}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Grid, Paper, useMediaQuery, useTheme } from '@material-ui/core';\nimport { Element } from 'react-scroll';\nimport UserTheme from './UserTheme';\nimport { Link } from 'react-scroll';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport ListContacts from '../ListContacts/ListContacts';\n\nexport default function Contacts() {\n  const classes = UserTheme();\n  const [visible, setVisible] = React.useState(false);\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('md'));\n\n  return (\n    <Element name='contact' className={classes.sectionContainer}>\n      <Grid\n        container\n        spacing={5}\n        justify='space-around'\n        className={classes.containerGrid}\n      >\n        {matches && <Grid item md={4}></Grid>}\n        <Grid item xs={12} md={4}>\n          <Grid\n            container\n            component={Link}\n            to={'contact'}\n            smooth={true}\n            offset={-100}\n            ignoreCancelEvents={true}\n          >\n            <Paper className={classes.titleContainer}>\n              <Grid item xs={12} className={classes.heading}>\n                Contact\n              </Grid>\n              {/* <Grid item xs={12} md={10}>\n                <LinearProgress\n                  classes={{\n                    root: classes.root,\n                    colorPrimary: classes.colorPrimary,\n                    bar: classes.bar,\n                  }}\n                />\n              </Grid> */}\n            </Paper>\n          </Grid>\n        </Grid>\n        {matches && <Grid item md={4}></Grid>}\n        <Grid item xs={12} className={classes.emptyGrid}></Grid>\n\n        {/* <ListContacts visible={visible} /> */}\n\n        <VisibilitySensor\n          onChange={isVisible => {\n            if (!visible) setVisible(isVisible);\n          }}\n          partialVisibility\n          active={!visible}\n        >\n          <ListContacts visible={visible} />\n        </VisibilitySensor>\n      </Grid>\n    </Element>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  text: {\n    ...theme.typography.heading,\n    backgroundColor: '#4478e3',\n    marginTop: -5,\n    padding: 2,\n    textAlign: 'center',\n    fontFamily: 'Sacramento',\n  },\n  link: {\n    fontSize: '1em',\n    color: '#fff',\n    textDecoration: 'none',\n  },\n  shareButton: {\n    height: 25,\n    width: 25,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport FooterTheme from './FooterTheme';\nimport './footerAnimation.css';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { Link as MuiLink } from '@material-ui/core';\n\nimport { useRecoilValue } from 'recoil';\nimport { authState } from '../../atoms';\n\nexport default function Footer() {\n  const classes = FooterTheme();\n  const auth = useRecoilValue(authState);\n  const onEditPage = useRouteMatch('/edit');\n  const onProfilePage = useRouteMatch('/profile/me');\n\n  return (\n    <footer>\n      <svg viewBox='0 0 120 28'>\n        <defs>\n          <mask id='xxx'>\n            <circle cx='7' cy='12' r='40' fill='#fff' />\n          </mask>\n\n          <filter id='goo'>\n            <feGaussianBlur in='SourceGraphic' stdDeviation='2' result='blur' />\n            <feColorMatrix\n              in='blur'\n              mode='matrix'\n              values='\n           1 0 0 0 0  \n           0 1 0 0 0  \n           0 0 1 0 0  \n           0 0 0 13 -9'\n              result='goo'\n            />\n            <feBlend in='SourceGraphic' in2='goo' />\n          </filter>\n          <path\n            id='wave'\n            d='M 0,10 C 30,10 30,15 60,15 90,15 90,10 120,10 150,10 150,15 180,15 210,15 210,10 240,10 v 28 h -240 z'\n          />\n        </defs>\n\n        <use id='wave3' className='wave' xlinkHref='#wave' x='0' y='-2'></use>\n        <use id='wave2' className='wave' xlinkHref='#wave' x='0' y='0'></use>\n\n        <g className='gooeff'>\n          <circle className='drop drop1' cx='20' cy='2' r='1.8' />\n          <circle className='drop drop2' cx='25' cy='2.5' r='1.5' />\n          <circle className='drop drop3' cx='16' cy='2.8' r='1.2' />\n          <use id='wave1' className='wave' xlinkHref='#wave' x='0' y='1' />\n        </g>\n      </svg>\n\n      <div>\n        <div className={classes.text}>\n          {' '}\n          Made with{' '}\n          <span role='img' aria-label='heart'>\n            ❤️{' '}\n          </span>\n          by\n          <MuiLink\n            href={`/user/5f0fd9fba7ca5012d31a5a1e`} // my id\n            target='_blank'\n            rel='noopener noreferrer'\n            className={classes.link}\n          >\n            {' Farhan Tahir'}\n          </MuiLink>\n        </div>\n\n        {onEditPage ? (\n          <MuiLink\n            href={`/user/${auth.user._id}`}\n            target='_blank'\n            rel='noopener noreferrer'\n            className={classes.link}\n          >\n            © Share your global profile link with others\n          </MuiLink>\n        ) : (\n          <Link to='/' className={classes.link}>\n            {!onProfilePage\n              ? '© Create one for yourself'\n              : '© Edit your profile'}\n          </Link>\n        )}\n      </div>\n    </footer>\n  );\n}\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { profileState } from '../../atoms';\nimport getProfileFromURL from '../../services/getProfileFromURL';\nimport getCurrentUserProfile from '../../services/getCurrentUserProfile';\n\nimport { Events, scrollSpy } from 'react-scroll';\nimport { useRouteMatch, useHistory } from 'react-router-dom';\n\nimport NavBar from '../NavBar/NavBar';\nimport Home from './Home';\nimport About from './About';\nimport Profile from './Profile';\nimport Projects from './Projects';\nimport LoadingAnimation from '../Loading/LoadingAnimation';\nimport Contact from './Contact';\nimport Footer from '../Footer/Footer';\n\nexport default function User() {\n  const [profile, setProfile] = useRecoilState(profileState);\n  const authenticatedURL = useRouteMatch('/profile/me');\n  const history = useHistory();\n  const match = useRouteMatch('/user/:id'); // if using the unathenticated route\n\n  React.useEffect(() => {\n    (async () => {\n      try {\n        const profileData = authenticatedURL\n          ? await getCurrentUserProfile()\n          : await getProfileFromURL(match.params.id);\n\n        setProfile(profileData);\n      } catch (error) {\n        history.push('/');\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    Events.scrollEvent.register('begin', () => {});\n    Events.scrollEvent.register('end', () => {});\n    scrollSpy.update();\n\n    return () => {\n      Events.scrollEvent.remove('begin');\n      Events.scrollEvent.remove('end');\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {Object.keys(profile).length ? (\n        <React.Fragment>\n          <NavBar />\n          <Home />\n          <About />\n          <Profile />\n          <Projects />\n          <Contact />\n          <Footer />\n        </React.Fragment>\n      ) : (\n        <LoadingAnimation />\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// https://gist.github.com/tunguskha/0d82bfeb498567a4e19493925df529cb\n\nconst useStyles = makeStyles(theme => ({\n  signupButton: {\n    position: 'relative',\n    outline: 'none',\n    border: 'none',\n    WebkitAppearance: 'none',\n    WebkitTapHighlightColor: 'transparent',\n    cursor: 'pointer',\n    WebkitUserSelect: 'none',\n    MozUserSelect: 'none',\n    userSelect: 'none',\n    padding: '0.75em 1.75em',\n    borderRadius: '50px',\n    display: 'inline-block',\n    color: '#fff',\n    width: '80%',\n    textDecoration: 'none',\n    // Gradinet\n    background:\n      '-webkit-gradient(linear, left top, right top, from(#7f00ff, to(#e100ff)',\n    // eslint-disable-next-line\n    background: 'linear-gradient(to right, #7f00ff, #e100ff)',\n    zIndex: 1000,\n\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      zIndex: -1,\n      bottom: '-10px',\n      left: '5%',\n      height: '110%',\n      width: '90%',\n      opacity: '0.8',\n      borderRadius: '50px',\n\n      /* Declaring our shadow color inherit from the parent (button) */\n      background: 'inherit',\n\n      /* Blurring the element for shadow effect */\n      WebkitFilter: 'blur(6px)',\n      MozFilter: 'blur(6px)',\n      filter: 'blur(6px)',\n\n      /* Transition for the magic */\n      WebkitTransition: 'all 0.2s',\n      transition: 'all 0.2s',\n    },\n    '&:hover': {\n      '&::after': {\n        /* Changing blur effect */\n        WebkitFilter: 'blur(4px)',\n        MozFilter: 'blur(4px)',\n        filter: 'blur(4px)',\n        bottom: '-5px',\n        left: '5%',\n      },\n      filter: 'brightness(1.05) contrast(1.05)',\n      backgroundPosition: 'right center',\n    },\n  },\n}));\n\nexport default function SignUpLoginButton({ label, onClick }) {\n  const classes = useStyles();\n  return (\n    <Button className={classes.signupButton} onClick={onClick}>\n      {label}\n    </Button>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    height: '100vh',\n  },\n  paperContainer: {\n    height: '100%',\n  },\n  paper: {\n    width: '100%',\n    padding: 50,\n    [theme.breakpoints.down('sm')]: {\n      padding: 30,\n    },\n  },\n  headingContainer: {\n    margin: '1em 0',\n  },\n  heading: {\n    ...theme.typography.heading,\n    color: theme.palette.additional.darkGey,\n    textAlign: 'center',\n  },\n  subHeading: {\n    fontSize: '1em',\n    color: theme.palette.additional.defaultTextFieldColor,\n    textAlign: 'center',\n  },\n  helperText: {\n    color: 'red',\n    marginLeft: 0,\n  },\n  image: {\n    height: '100%',\n    backgroundImage: 'url(https://source.unsplash.com/random/?computer)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  signupIconContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  signupIcon: {\n    height: 50,\n    width: 50,\n  },\n  textField: {\n    margin: '2em auto',\n  },\n  signupButtonContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '2em',\n    // cursor: 'pointer',\n    textDecoration: 'none',\n  },\n  signInText: {\n    fontSize: '1em',\n    color: theme.palette.additional.blue,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nexport default function PositionedSnackbar({\n  state,\n  message,\n  closeToast,\n  severity = 'success',\n}) {\n  const { vertical, horizontal, open } = state;\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      onClose={closeToast}\n      key={vertical + horizontal}\n      autoHideDuration={severity === 'info' ? 9000000 : 1500}\n    >\n      <Alert onClose={closeToast} severity={severity}>\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n}\n","import axios from 'axios';\n\nconst registerUser = async newUser => {\n  try {\n    const response = await axios.post('/api/users', newUser);\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\n\nexport default registerUser;\n","import React, { useState } from 'react';\nimport {\n  Grid,\n  Paper,\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  CssBaseline,\n  Typography,\n  FormHelperText,\n} from '@material-ui/core';\nimport Button from '../shared/SignUpLoginButton';\nimport RegisterTheme from './RegisterTheme';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport ToastNotification from '../shared/ToastNotification';\nimport registerUser from '../../services/registerUser';\nimport { Link, useHistory, Redirect } from 'react-router-dom';\n\nimport { useRecoilValue } from 'recoil';\nimport { authState } from '../../atoms';\n\nexport default function Register() {\n  const classes = RegisterTheme();\n  const history = useHistory();\n  const auth = useRecoilValue(authState);\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const [errors, setErrors] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  //  **** for the toast notification\n  const [message, setMessage] = useState('');\n  const [severity, setSeverity] = useState('');\n\n  const [state, setState] = useState({\n    open: false,\n    vertical: 'bottom',\n    horizontal: 'right',\n  });\n\n  const showToast = () => {\n    setState({ ...state, open: true });\n  };\n\n  const closeToast = () => {\n    setState({ ...state, open: false });\n  };\n\n  // ****\n\n  const handleChange = event => {\n    // Clear errors\n    setErrors({\n      name: '',\n      email: '',\n      password: '',\n    });\n\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      setMessage(\"Passwords don't match\");\n      setSeverity('error');\n      showToast();\n    } else {\n      (async () => {\n        const newUser = {\n          name: formData.name,\n          email: formData.email,\n          password: formData.password,\n        };\n        const response = await registerUser(newUser);\n\n        if (response.errors) {\n          response.errors.map(error =>\n            setErrors(oldError => {\n              return { ...oldError, [error.param]: error.msg };\n            })\n          );\n          setMessage('Failed to register user');\n          setSeverity('error');\n          showToast();\n        } else {\n          //success\n          setMessage('Account created successfuly');\n          setSeverity('success');\n          showToast(); // default message and severity\n\n          setTimeout(() => {\n            // Redirect to login\n            history.push('/login');\n          }, 1500);\n        }\n      })();\n    }\n  };\n\n  // Redirecting incase of authenticated\n  if (auth.isAuthenticated) {\n    return <Redirect to='/edit' />;\n  }\n\n  return (\n    <Grid container className={classes.mainContainer}>\n      <ToastNotification\n        state={state}\n        closeToast={closeToast}\n        message={message}\n        severity={severity}\n      />\n\n      <CssBaseline />\n\n      <Grid item xs={false} sm={5} md={7} className={classes.image} />\n\n      <Grid\n        item\n        container\n        xs={12}\n        sm={7}\n        md={5}\n        className={classes.paperContainer}\n      >\n        <Paper className={classes.paper} elevation={10}>\n          {/* Signup Icon */}\n          <Grid item xs={12} className={classes.signupIconContainer}>\n            <img\n              src='/images/signup.svg'\n              alt='signup'\n              className={classes.signupIcon}\n            />\n          </Grid>\n\n          {/* Text */}\n          <Grid item xs={12} className={classes.headingContainer}>\n            <Typography variant='h4' className={classes.heading}>\n              Welcome, Create your account\n            </Typography>\n            <Typography className={classes.subHeading}>\n              Enter your email and create a password\n            </Typography>\n          </Grid>\n\n          {/* Name */}\n          <Grid item xs={12} className={classes.textField}>\n            <FormControl fullWidth variant='outlined'>\n              <InputLabel error={errors.name !== ''}>Name</InputLabel>\n              <OutlinedInput\n                value={formData.name}\n                name='name'\n                onChange={handleChange}\n                labelWidth={45}\n                error={errors.name !== ''}\n              />\n            </FormControl>\n            <FormHelperText className={classes.helperText}>\n              {errors.name}\n            </FormHelperText>\n          </Grid>\n\n          {/* Email */}\n          <Grid item xs={12} className={classes.textField}>\n            <FormControl fullWidth variant='outlined'>\n              <InputLabel error={errors.email !== ''}>Email</InputLabel>\n              <OutlinedInput\n                value={formData.email}\n                name='email'\n                onChange={handleChange}\n                labelWidth={45}\n                error={errors.email !== ''}\n              />\n            </FormControl>\n            <FormHelperText className={classes.helperText}>\n              {errors.email}\n            </FormHelperText>\n          </Grid>\n\n          {/*Password */}\n          <Grid item xs={12} className={classes.textField}>\n            <FormControl fullWidth variant='outlined'>\n              <InputLabel error={errors.password !== ''}>Password</InputLabel>\n              <OutlinedInput\n                type={showPassword ? 'text' : 'password'}\n                value={formData.password}\n                name='password'\n                onChange={handleChange}\n                endAdornment={\n                  <InputAdornment position='end'>\n                    <IconButton\n                      aria-label='toggle password visibility'\n                      onClick={() => setShowPassword(!showPassword)}\n                      edge='end'\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={75}\n                error={errors.password !== ''}\n              />\n              <FormHelperText className={classes.helperText}>\n                {errors.password}\n              </FormHelperText>\n            </FormControl>\n          </Grid>\n\n          {/* Confirm Password */}\n          <Grid item xs={12} className={classes.textField}>\n            <FormControl fullWidth variant='outlined'>\n              <InputLabel\n                error={\n                  formData.confirmPassword !== '' &&\n                  formData.password !== formData.confirmPassword\n                }\n              >\n                Confirm Password\n              </InputLabel>\n              <OutlinedInput\n                error={\n                  formData.confirmPassword !== '' &&\n                  formData.password !== formData.confirmPassword\n                }\n                type={showConfirmPassword ? 'text' : 'password'}\n                value={formData.confirmPassword}\n                name='confirmPassword'\n                onChange={handleChange}\n                endAdornment={\n                  <InputAdornment position='end'>\n                    <IconButton\n                      aria-label='toggle password visibility'\n                      onClick={() =>\n                        setShowConfirmPassword(!showConfirmPassword)\n                      }\n                      edge='end'\n                    >\n                      {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={135}\n              />\n              <FormHelperText className={classes.helperText}>\n                {formData.confirmPassword !== '' &&\n                  formData.password !== formData.confirmPassword &&\n                  \"Passwords don't match\"}\n              </FormHelperText>\n            </FormControl>\n          </Grid>\n\n          {/* Signup Button */}\n          <Grid item xs={12} className={classes.signupButtonContainer}>\n            <Button\n              className={classes.signupButton}\n              label='Sign Up'\n              onClick={handleSubmit}\n            />\n          </Grid>\n\n          {/* Already have an account */}\n          <Grid container>\n            <Grid item xs={false} md={2}></Grid>\n            <Grid\n              item\n              xs={12}\n              md={8}\n              className={classes.signupButtonContainer}\n              component={Link}\n              to='/login'\n            >\n              <Grid container justify='center' className={classes.signInText}>\n                Already have an account? Sign in\n              </Grid>\n            </Grid>\n            <Grid item xs={false} md={2}></Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    height: '100vh',\n  },\n  paperContainer: {\n    height: '100%',\n  },\n  paper: {\n    width: '100%',\n    padding: 50,\n    [theme.breakpoints.down('sm')]: {\n      padding: 30,\n    },\n  },\n  headingContainer: {\n    margin: '1em 0',\n  },\n  heading: {\n    ...theme.typography.heading,\n    color: theme.palette.additional.darkGey,\n    textAlign: 'center',\n  },\n  subHeading: {\n    fontSize: '1em',\n    color: theme.palette.additional.defaultTextFieldColor,\n    textAlign: 'center',\n  },\n  helperText: {\n    color: 'red',\n    marginLeft: 0,\n  },\n  image: {\n    height: '100%',\n    backgroundImage: 'url(https://source.unsplash.com/random/?computer)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  signInIconContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  signInIcon: {\n    height: 50,\n    width: 50,\n  },\n  textField: {\n    margin: '2em auto',\n  },\n  signInButtonContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '2em',\n    textDecoration: 'none',\n  },\n  signInText: {\n    fontSize: '1em',\n    color: theme.palette.additional.blue,\n  },\n}));\n\nexport default useStyles;\n","import axios from 'axios';\n\nconst loginUser = async user => {\n  try {\n    const response = await axios.post('/api/auth', user);\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\n\nexport default loginUser;\n","import axios from 'axios';\n\nconst getUserFromTken = async () => {\n  try {\n    const response = await axios.get('/api/auth');\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\n\nexport default getUserFromTken;\n","import React, { useState } from 'react';\nimport {\n  Grid,\n  Paper,\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  CssBaseline,\n  Typography,\n  FormHelperText,\n} from '@material-ui/core';\nimport Button from '../shared/SignUpLoginButton';\nimport LoginTheme from './LoginTheme';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { Link, Redirect } from 'react-router-dom';\n\n// On Login\nimport ToastNotification from '../shared/ToastNotification';\nimport loginUser from '../../services/loginUser';\nimport { useRecoilState } from 'recoil';\nimport { authState } from '../../atoms';\n// For token\nimport setAuthToken from '../../utils/setAuthToken';\nimport getUserFromToken from '../../services/getUserFromToken';\n\nexport default function Login() {\n  const classes = LoginTheme();\n  const [auth, setAuth] = useRecoilState(authState);\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [errors, setErrors] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  //  **** for the toast notification\n  const [message, setMessage] = useState('');\n  const [severity, setSeverity] = useState('');\n\n  const [state, setState] = useState({\n    open: false,\n    vertical: 'bottom',\n    horizontal: 'right',\n  });\n\n  const showToast = () => {\n    setState({ ...state, open: true });\n  };\n\n  const closeToast = () => {\n    setState({ ...state, open: false });\n  };\n\n  // ****\n\n  const handleChange = event => {\n    // Clear errors\n    setErrors({\n      email: '',\n      password: '',\n    });\n\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = event => {\n    (async () => {\n      const user = {\n        email: formData.email,\n        password: formData.password,\n      };\n      const response = await loginUser(user);\n\n      if (response.errors) {\n        localStorage.removeItem('token'); // remove any previous token\n        response.errors.map(error =>\n          setErrors(oldError => {\n            return { ...oldError, [error.param]: error.msg };\n          })\n        );\n        setMessage('Failed to Login');\n        setSeverity('error');\n        showToast();\n      } else {\n        //success\n        localStorage.setItem('token', response.token);\n\n        // get user from token\n        setAuthToken(response.token);\n        const user = await getUserFromToken();\n\n        setAuth({\n          ...auth,\n          token: response.token,\n          isAuthenticated: true,\n          user: user,\n        });\n\n        setMessage('Logged in successfuly');\n        setSeverity('success');\n        showToast();\n      }\n    })();\n  };\n\n  // Redirecting incase of authenticated\n  if (auth.isAuthenticated) {\n    return <Redirect to='/edit' />;\n  }\n\n  return (\n    <Grid container className={classes.mainContainer}>\n      <ToastNotification\n        state={state}\n        closeToast={closeToast}\n        message={message}\n        severity={severity}\n      />\n\n      <CssBaseline />\n\n      <Grid item xs={false} sm={5} md={7} className={classes.image} />\n\n      <Grid\n        item\n        container\n        xs={12}\n        sm={7}\n        md={5}\n        className={classes.paperContainer}\n      >\n        <Paper className={classes.paper} elevation={10}>\n          {/* Signup Icon */}\n          <Grid item xs={12} className={classes.signInIconContainer}>\n            <img\n              src='/images/login.svg'\n              alt='signup'\n              className={classes.signInIcon}\n            />\n          </Grid>\n\n          {/* Text */}\n          <Grid item xs={12} className={classes.headingContainer}>\n            <Typography variant='h4' className={classes.heading}>\n              Welcome back\n            </Typography>\n            <Typography className={classes.subHeading}>\n              Enter your email and password to login\n            </Typography>\n          </Grid>\n\n          {/* Email */}\n          <Grid item xs={12} className={classes.textField}>\n            <FormControl fullWidth variant='outlined'>\n              <InputLabel error={errors.email !== ''}>Email</InputLabel>\n              <OutlinedInput\n                value={formData.email}\n                name='email'\n                onChange={handleChange}\n                labelWidth={45}\n                error={errors.email !== ''}\n              />\n            </FormControl>\n            <FormHelperText className={classes.helperText}>\n              {errors.email}\n            </FormHelperText>\n          </Grid>\n\n          {/*Password */}\n          <Grid item xs={12} className={classes.textField}>\n            <FormControl fullWidth variant='outlined'>\n              <InputLabel error={errors.password !== ''}>Password</InputLabel>\n              <OutlinedInput\n                type={showPassword ? 'text' : 'password'}\n                value={formData.password}\n                name='password'\n                onChange={handleChange}\n                endAdornment={\n                  <InputAdornment position='end'>\n                    <IconButton\n                      aria-label='toggle password visibility'\n                      onClick={() => setShowPassword(!showPassword)}\n                      edge='end'\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={75}\n                error={errors.password !== ''}\n              />\n              <FormHelperText className={classes.helperText}>\n                {errors.password}\n              </FormHelperText>\n            </FormControl>\n          </Grid>\n\n          {/* SignIn Button */}\n          <Grid item xs={12} className={classes.signInButtonContainer}>\n            <Button\n              className={classes.signupButton}\n              label='Sign In'\n              onClick={handleSubmit}\n            />\n          </Grid>\n\n          {/* Dont have and account */}\n          <Grid container>\n            <Grid item xs={false} md={2}></Grid>\n            <Grid\n              item\n              xs={12}\n              md={8}\n              className={classes.signInButtonContainer}\n              component={Link}\n              to='/register'\n            >\n              <Grid container justify='center' className={classes.signInText}>\n                Don't have an account? Create One\n              </Grid>\n            </Grid>\n            <Grid item xs={false} md={2}></Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    margin: 0,\n  },\n  paper: {\n    margin: theme.spacing(10, 16),\n    padding: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      margin: theme.spacing(5, 3),\n      padding: theme.spacing(3),\n    },\n    width: '100%',\n    // backgroundColor: theme.palette.additional.grey,\n  },\n  textFieldContainer: {\n    margin: '1em auto',\n  },\n  icon: {\n    height: 25,\n    width: 25,\n  },\n  iconContainer: {\n    // padding: 0,\n  },\n  endIcon: {\n    height: 20,\n    width: 20,\n  },\n  topText: {\n    ...theme.typography.heading,\n    color: theme.palette.additional.darkGey,\n    textAlign: 'center',\n    marginBottom: '1em',\n  },\n  heading: {\n    ...theme.typography.subHeading,\n    color: theme.palette.additional.blue,\n  },\n  subHeading: {\n    ...theme.typography.text,\n    color: theme.palette.additional.blue,\n    paddingBottom: '0 !important',\n  },\n  accordion: {\n    padding: 0,\n  },\n  uploadContainer: {\n    border: 'solid 1px rgba(0, 0, 0, 0.23)', // default border color\n    borderRadius: 2,\n  },\n  uploadButton: {\n    width: '100%',\n    height: '100%',\n  },\n  textContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    // buttonText\n    ...theme.typography.subHeading,\n    textAlign: 'center',\n    textTransform: 'none',\n    color: 'currentColor',\n    fontFamily: 'sofia',\n  },\n  addButton: {\n    textAlign: 'left',\n    textTransform: 'none',\n    backgroundColor: theme.palette.additional.blue,\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.additional.blue,\n    },\n  },\n  sectionContainer: {\n    marginBottom: '2.5em',\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: '1.5em',\n    },\n  },\n  checkBox: {\n    root: {\n      '&$checked': {\n        color: 'white',\n      },\n    },\n    checked: {},\n  },\n  submitButtonContainer: {\n    margin: '0 auto',\n    marginTop: '5em',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: '3em',\n    },\n  },\n  submitButton: {\n    ...theme.typography.subHeading,\n    textTransform: 'none',\n    height: 50,\n    backgroundColor: theme.palette.additional.blue,\n    '&:hover': {\n      backgroundColor: theme.palette.additional.blue,\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Dialog, DialogActions, DialogTitle, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  dialog: {\n    borderRadius: 10,\n    boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.5)',\n    padding: '1em',\n  },\n  title: {\n    fontSize: '1em',\n    fontWeight: 500,\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  buttonOutlined: {\n    textTransform: 'none',\n    color: theme.palette.additional.blue,\n    borderColor: theme.palette.additional.blue,\n    borderRadius: 2,\n    width: 50,\n  },\n  buttonContained: {\n    textTransform: 'none',\n    backgroundColor: theme.palette.additional.blue,\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: theme.palette.additional.blue,\n    },\n    width: 50,\n  },\n}));\n\nexport default function AlertDialog({\n  openConfirmationDialog,\n  handleCloseConfirmationDialog,\n  setAccepted,\n  message,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={openConfirmationDialog}\n      onClose={handleCloseConfirmationDialog}\n      aria-labelledby='alert-dialog-title'\n      aria-describedby='alert-dialog-description'\n      classes={{\n        paper: classes.dialog,\n      }}\n    >\n      <DialogTitle\n        className={classes.title}\n        id='alert-dialog-title'\n        disableTypography\n      >\n        {message}\n      </DialogTitle>\n\n      <DialogActions>\n        <Button\n          variant='outlined'\n          onClick={() => {\n            handleCloseConfirmationDialog();\n            setAccepted(false);\n          }}\n          className={classes.buttonOutlined}\n        >\n          No\n        </Button>\n        <Button\n          variant='contained'\n          onClick={() => {\n            handleCloseConfirmationDialog();\n            setAccepted(true);\n          }}\n          className={classes.buttonContained}\n        >\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport {\n  Grid,\n  TextField,\n  InputAdornment,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport EditProfileTheme from './EditProfileTheme';\nimport ConfirmationDialog from '../shared/ConfirmationDialog';\n\nimport { useRecoilState } from 'recoil';\nimport { profileState } from '../../atoms';\n\nexport default function SocialMedia() {\n  const classes = EditProfileTheme();\n  const [profile, setProfile] = useRecoilState(profileState);\n\n  // ******** for the confirmation doalog\n  const [openConfirmationDialog, setOpenConfirmationDialog] = React.useState(\n    false\n  );\n  const handleClickOpenConfirmationDialog = () => {\n    setOpenConfirmationDialog(true);\n  };\n  const handleCloseConfirmationDialog = () => {\n    setOpenConfirmationDialog(false);\n  };\n  const [accepted, setAccepted] = React.useState(false);\n  // ****************\n\n  const handleChange = e => {\n    setProfile({\n      ...profile,\n      connect: { ...profile.connect, [e.target.name]: e.target.value },\n    });\n  };\n\n  // **** Clear URL;\n  const [Name, setName] = React.useState('');\n  React.useEffect(() => {\n    if (!accepted) return;\n    setProfile({\n      ...profile,\n      connect: { ...profile.connect, [Name]: '' },\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [accepted]);\n\n  const clearText = name => {\n    setAccepted(false);\n    setName(name);\n    handleClickOpenConfirmationDialog();\n  };\n  // *****\n\n  return (\n    // <Grid item xs={12} >\n    <Accordion elevation={0} defaultExpanded>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls='panel1a-content'\n        id='panel1a-header'\n        className={classes.accordion}\n      >\n        <Typography className={classes.heading}>Social Media Links</Typography>\n      </AccordionSummary>\n\n      <AccordionDetails className={classes.accordion}>\n        <Grid container spacing={3}>\n          {/* Facebook */}\n          <Grid item xs={12}>\n            <TextField\n              variant='outlined'\n              value={profile.connect.facebook}\n              name='facebook'\n              onChange={handleChange}\n              fullWidth\n              label='Facebook'\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <img\n                      className={classes.icon}\n                      src='/images/contact/facebook.svg'\n                      alt='facebook'\n                    />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton\n                      onClick={() => {\n                        clearText('facebook');\n                      }}\n                      className={classes.iconContainer}\n                    >\n                      <img\n                        className={classes.endIcon}\n                        src='/images/clear.svg'\n                        alt='clear'\n                      />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              placeholder='Facebook URL'\n            />\n          </Grid>\n\n          {/* Instagram */}\n          <Grid item xs={12}>\n            <TextField\n              variant='outlined'\n              value={profile.connect.instagram}\n              name='instagram'\n              onChange={handleChange}\n              fullWidth\n              label='Instagram'\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <img\n                      className={classes.icon}\n                      src='/images/contact/instagram.svg'\n                      alt='insta'\n                    />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton\n                      onClick={() => {\n                        clearText('instagram');\n                      }}\n                      className={classes.iconContainer}\n                    >\n                      <img\n                        className={classes.endIcon}\n                        src='/images/clear.svg'\n                        alt='clear'\n                      />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              placeholder='Instagram URL'\n            />\n          </Grid>\n\n          {/* LinkedIn */}\n          <Grid item xs={12}>\n            <TextField\n              variant='outlined'\n              value={profile.connect.linkedin}\n              name='linkedin'\n              onChange={handleChange}\n              fullWidth\n              label='LinkedIn'\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <img\n                      className={classes.icon}\n                      src='/images/contact/linkedin.svg'\n                      alt='linkedin'\n                    />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton\n                      onClick={() => {\n                        clearText('linkedin');\n                      }}\n                      className={classes.iconContainer}\n                    >\n                      <img\n                        className={classes.endIcon}\n                        src='/images/clear.svg'\n                        alt='clear'\n                      />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              placeholder='LinkedIn URL'\n            />\n          </Grid>\n\n          {/* GitHub */}\n          <Grid item xs={12}>\n            <TextField\n              variant='outlined'\n              value={profile.connect.github}\n              name='github'\n              onChange={handleChange}\n              fullWidth\n              label='Github'\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <img\n                      className={classes.icon}\n                      src='/images/contact/github.svg'\n                      alt='github'\n                    />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton\n                      onClick={() => {\n                        clearText('github');\n                      }}\n                      className={classes.iconContainer}\n                    >\n                      <img\n                        className={classes.endIcon}\n                        src='/images/clear.svg'\n                        alt='clear'\n                      />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              placeholder='Github URL'\n            />\n          </Grid>\n\n          {/* Twitter */}\n          <Grid item xs={12}>\n            <TextField\n              variant='outlined'\n              value={profile.connect.twitter}\n              name='twitter'\n              onChange={handleChange}\n              fullWidth\n              label='Twitter'\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <img\n                      className={classes.icon}\n                      src='/images/contact/twitter.svg'\n                      alt='twitter'\n                    />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton\n                      onClick={() => {\n                        clearText('twitter');\n                      }}\n                      className={classes.iconContainer}\n                    >\n                      <img\n                        className={classes.endIcon}\n                        src='/images/clear.svg'\n                        alt='clear'\n                      />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              placeholder='Twitter URL'\n            />\n          </Grid>\n\n          {/* Steam */}\n          <Grid item xs={12}>\n            <TextField\n              variant='outlined'\n              value={profile.connect.steam}\n              name='steam'\n              onChange={handleChange}\n              fullWidth\n              label='Steam'\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <img\n                      className={classes.icon}\n                      src='/images/contact/steam.svg'\n                      alt='steam'\n                    />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton\n                      onClick={() => {\n                        clearText('steam');\n                      }}\n                      className={classes.iconContainer}\n                    >\n                      <img\n                        className={classes.endIcon}\n                        src='/images/clear.svg'\n                        alt='clear'\n                      />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              placeholder='Steam URL'\n            />\n          </Grid>\n        </Grid>\n      </AccordionDetails>\n\n      <ConfirmationDialog\n        openConfirmationDialog={openConfirmationDialog}\n        handleCloseConfirmationDialog={handleCloseConfirmationDialog}\n        setAccepted={setAccepted}\n        message='Are you sure you want to clear this URL?'\n      />\n    </Accordion>\n    // </Grid>\n  );\n}\n","import React from 'react';\nimport {\n  Grid,\n  TextField,\n  FormControl,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n  Button,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport EditProfileTheme from './EditProfileTheme';\n\nimport { useRecoilState } from 'recoil';\nimport { profileState } from '../../atoms';\n\nexport default function PersonalDetails() {\n  const classes = EditProfileTheme();\n  const [profile, setProfile] = useRecoilState(profileState);\n\n  const uploadImage = event => {\n    event.preventDefault();\n    setProfile({ ...profile, image: event.target.files[0] });\n  };\n\n  const handleChange = event => {\n    setProfile({\n      ...profile,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <Accordion elevation={0} defaultExpanded>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls='panel1a-content'\n        id='panel1a-header'\n        className={classes.accordion}\n      >\n        <Typography className={classes.heading}>Personal Details</Typography>\n      </AccordionSummary>\n\n      <AccordionDetails className={classes.accordion}>\n        <Grid container spacing={3}>\n          {/* Small Description */}\n          <Grid item xs={12}>\n            <TextField\n              variant='outlined'\n              value={profile.smallDescription}\n              name='smallDescription'\n              onChange={handleChange}\n              required\n              fullWidth\n              label='Small Description'\n              helperText='1 line Description about yourself'\n            />\n          </Grid>\n\n          {/* About */}\n          <Grid item xs={12}>\n            <TextField\n              multiline // acts as text area\n              variant='outlined'\n              value={profile.about}\n              name='about'\n              onChange={handleChange}\n              required\n              fullWidth\n              label='About'\n              helperText='Short bio about yourself'\n            />\n          </Grid>\n\n          {/* Location */}\n          <Grid item xs={12}>\n            <Grid container spacing={5} justify='space-around'>\n              {/* City */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  variant='outlined'\n                  value={profile.loc.city}\n                  onChange={e => {\n                    let address = { ...profile.loc };\n                    address.city = e.target.value;\n                    setProfile({ ...profile, loc: address });\n                  }}\n                  required\n                  fullWidth\n                  label='City'\n                />\n              </Grid>\n\n              {/* Coutnry */}\n              <Grid item xs={12} md={6}>\n                <TextField\n                  variant='outlined'\n                  value={profile.loc.country}\n                  onChange={e => {\n                    let address = { ...profile.loc };\n                    address.country = e.target.value;\n                    setProfile({ ...profile, loc: address });\n                  }}\n                  required\n                  fullWidth\n                  label='Country'\n                />\n              </Grid>\n\n              {/* Image */}\n              <Grid item xs={12} sm={4}>\n                <input\n                  accept='image/*'\n                  type='file'\n                  id='image'\n                  hidden\n                  onChange={uploadImage}\n                />\n                <FormControl\n                  fullWidth\n                  variant='outlined'\n                  className={classes.uploadContainer}\n                >\n                  <label htmlFor='image'>\n                    <Button\n                      fullWidth\n                      component='span'\n                      className={classes.uploadButton}\n                    >\n                      <Grid container>\n                        <Grid item xs={10} className={classes.textContainer}>\n                          <Typography className={classes.text}>\n                            Upload Image\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={2}>\n                          <img\n                            src='/images/upload.svg'\n                            alt='upload'\n                            className={classes.icon}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Button>\n                  </label>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from 'react';\nimport {\n  Grid,\n  TextField,\n  InputAdornment,\n  Button,\n  IconButton,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport EditProfileTheme from '../EditProfileTheme';\nimport ConfirmationDialog from '../../shared/ConfirmationDialog';\n\nimport { useRecoilState } from 'recoil';\nimport { profileState } from '../../../atoms';\n\nexport default function SkillDetails() {\n  const classes = EditProfileTheme();\n  const [profile, setProfile] = useRecoilState(profileState);\n\n  // ******** for the confirmation doalog\n  const [openConfirmationDialog, setOpenConfirmationDialog] = React.useState(\n    false\n  );\n  const handleClickOpenConfirmationDialog = () => {\n    setOpenConfirmationDialog(true);\n  };\n  const handleCloseConfirmationDialog = () => {\n    setOpenConfirmationDialog(false);\n  };\n  const [accepted, setAccepted] = React.useState(false);\n  // ****************\n\n  const setOfSkills = new Set([\n    // skills for which icon is present\n    'c++',\n    'python',\n    'javascript',\n    'mongodb',\n    'reactjs',\n    'nodejs',\n    'typescript',\n  ]);\n\n  const handleChange = (e, index) => {\n    let skills = [...profile.skills];\n    skills[index] = e.target.value;\n    setProfile({\n      ...profile,\n      skills,\n    });\n  };\n\n  const addSkill = () => {\n    setProfile({\n      ...profile,\n      skills: [...profile.skills, ''],\n    });\n  };\n\n  // **** remove skill\n  const [Index, setIndex] = React.useState(0);\n  React.useEffect(() => {\n    if (!accepted) return;\n\n    let skills = [...profile.skills];\n    skills.splice(Index, 1);\n    setProfile({\n      ...profile,\n      skills,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [accepted]);\n  const removeSkill = index => {\n    setAccepted(false);\n    setIndex(index);\n    handleClickOpenConfirmationDialog();\n  };\n  // ****\n\n  return (\n    <Accordion elevation={0} defaultExpanded>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls='panel1a-content'\n        id='panel1a-header'\n        className={classes.accordion}\n      >\n        <Typography className={classes.heading}>Skills</Typography>\n      </AccordionSummary>\n\n      <AccordionDetails className={classes.accordion}>\n        <Grid container spacing={3}>\n          {profile.skills.map((skill, index) => (\n            // using index as key instead of uuid because key needs to remain same otherwise it loses focus on change\n            <Grid item sm={4} xs={12} key={index}>\n              <TextField\n                variant='outlined'\n                value={skill}\n                onChange={e => {\n                  handleChange(e, index);\n                }}\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position='start'>\n                      {setOfSkills.has(skill.toLowerCase()) ? (\n                        <img\n                          src={`/images/skills/${skill.toLowerCase()}.svg`}\n                          alt={skill}\n                          className={classes.icon}\n                        />\n                      ) : (\n                        <img\n                          src={`/images/skills/defaultSkill.svg`}\n                          alt={skill}\n                          className={classes.icon}\n                        />\n                      )}\n                    </InputAdornment>\n                  ),\n                  endAdornment: (\n                    <InputAdornment position='end'>\n                      <IconButton\n                        onClick={() => {\n                          removeSkill(index);\n                        }}\n                        className={classes.iconContainer}\n                      >\n                        <img\n                          src='/images/delete.svg'\n                          alt='delete'\n                          className={classes.endIcon}\n                        />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n          ))}\n\n          <Grid\n            item\n            xs={12}\n            style={{\n              padding: 0,\n            }}\n          ></Grid>\n          <Grid item xs={12} sm={4}>\n            <Button\n              fullWidth\n              variant='contained'\n              className={classes.addButton}\n              onClick={addSkill}\n            >\n              {profile.skills.length ? 'Add another skill' : 'Add skill'}\n            </Button>\n          </Grid>\n\n          <ConfirmationDialog\n            openConfirmationDialog={openConfirmationDialog}\n            handleCloseConfirmationDialog={handleCloseConfirmationDialog}\n            setAccepted={setAccepted}\n            message='Are you sure you want to remove this skill?'\n          />\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from 'react';\nimport {\n  Grid,\n  TextField,\n  InputAdornment,\n  Button,\n  IconButton,\n  Select,\n  FormControl,\n  MenuItem,\n  InputLabel,\n  useTheme,\n  useMediaQuery,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport EditProfileTheme from '../EditProfileTheme';\nimport ConfirmationDialog from '../../shared/ConfirmationDialog';\n\nimport { useRecoilState } from 'recoil';\nimport { profileState } from '../../../atoms';\n\nexport default function EducationDetails() {\n  const classes = EditProfileTheme();\n  const [profile, setProfile] = useRecoilState(profileState);\n  const theme = useTheme();\n  const smallerThanSm = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // ******** for the confirmation doalog\n  const [openConfirmationDialog, setOpenConfirmationDialog] = React.useState(\n    false\n  );\n  const handleClickOpenConfirmationDialog = () => {\n    setOpenConfirmationDialog(true);\n  };\n  const handleCloseConfirmationDialog = () => {\n    setOpenConfirmationDialog(false);\n  };\n  const [accepted, setAccepted] = React.useState(false);\n  // ****************\n\n  const handleChange = (e, index, type) => {\n    // idk why I have to do this\n    // doesnt lets me change directly like\n    // eduucation[index].name = e.target.value\n    // read only property error\n\n    let education = [...profile.education];\n    let edu = {\n      ...education[index],\n    };\n\n    if (type === 'name') {\n      edu.name = e.target.value;\n    } else if (type === 'school') {\n      edu.school = e.target.value;\n    } else if (type === 'value') {\n      let eduScore = {\n        ...edu.score,\n      };\n      eduScore.value = e.target.value;\n      edu.score = eduScore;\n    } else {\n      let eduScore = {\n        ...edu.score,\n      };\n      eduScore.postfix = e.target.value;\n      edu.score = eduScore;\n    }\n    education[index] = edu;\n    setProfile({\n      ...profile,\n      education,\n    });\n  };\n\n  const addEducation = () => {\n    setProfile({\n      ...profile,\n      education: [\n        ...profile.education,\n        {\n          name: '',\n          school: '',\n          score: {\n            value: '',\n            postfix: '%',\n          },\n        },\n      ],\n    });\n  };\n\n  // **** Deleting an education\n  const [Index, setIndex] = React.useState(0);\n  React.useEffect(() => {\n    if (!accepted) return;\n\n    let education = [...profile.education];\n    education.splice(Index, 1);\n    setProfile({ ...profile, education });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [accepted]);\n\n  const removeEducation = index => {\n    setAccepted(false);\n    setIndex(index);\n    handleClickOpenConfirmationDialog(index);\n  };\n  // *****\n\n  return (\n    <Accordion elevation={0} defaultExpanded>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls='panel1a-content'\n        id='panel1a-header'\n        className={classes.accordion}\n      >\n        <Typography className={classes.heading}>Education</Typography>\n      </AccordionSummary>\n\n      <AccordionDetails className={classes.accordion}>\n        <Grid container spacing={3}>\n          {profile.education.map((edu, index) => (\n            <Grid item xs={12} sm={4} key={index}>\n              <Grid container spacing={3}>\n                {/* Course Name */}\n                <Grid item xs={12}>\n                  <TextField\n                    label='Course Name'\n                    variant='outlined'\n                    value={edu.name}\n                    onChange={e => {\n                      handleChange(e, index, 'name');\n                    }}\n                    fullWidth\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position='end'>\n                          <IconButton\n                            onClick={() => {\n                              removeEducation(index);\n                            }}\n                            className={classes.iconContainer}\n                          >\n                            <img\n                              src='/images/delete.svg'\n                              alt='delete'\n                              className={classes.endIcon}\n                            />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n\n                {/* School Name */}\n                <Grid item xs={12}>\n                  <TextField\n                    label='School Name'\n                    variant='outlined'\n                    value={edu.school}\n                    onChange={e => {\n                      handleChange(e, index, 'school');\n                    }}\n                    fullWidth\n                  />\n                </Grid>\n\n                {/* score */}\n                <Grid\n                  item\n                  xs={12}\n                  // no bottom margin in case of last row\n                  // no of rows  * no of elements in each row (3) - ( 1 + 3);\n                  // 1 for index, 3 for elements in each row\n                  className={\n                    // since only 1 item in a row ifs creen width is smaller than sm\n                    smallerThanSm\n                      ? index < profile.education.length - 1\n                        ? classes.sectionContainer\n                        : null\n                      : index <= Math.ceil(profile.education.length / 3) * 3 - 4\n                      ? classes.sectionContainer\n                      : null\n                  }\n                >\n                  <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                      <TextField\n                        label='Score'\n                        variant='outlined'\n                        value={edu.score.value}\n                        onChange={e => {\n                          handleChange(e, index, 'value');\n                        }}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <FormControl\n                        fullWidth\n                        variant='outlined'\n                        className={classes.formControl}\n                      >\n                        <InputLabel>Type</InputLabel>\n                        <Select\n                          value={edu.score.postfix}\n                          onChange={e => {\n                            handleChange(e, index, 'postfix');\n                          }}\n                          label='Type'\n                        >\n                          <MenuItem value={'CGPA'}>CPGA</MenuItem>\n                          <MenuItem value={'%'}>%</MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          ))}\n\n          <Grid item xs={12} style={{ padding: 0 }}></Grid>\n          <Grid item xs={12} sm={4}>\n            <Button\n              fullWidth\n              variant='contained'\n              className={classes.addButton}\n              onClick={addEducation}\n            >\n              {profile.education.length\n                ? 'Add another education'\n                : 'Add education'}\n            </Button>\n          </Grid>\n\n          <ConfirmationDialog\n            openConfirmationDialog={openConfirmationDialog}\n            handleCloseConfirmationDialog={handleCloseConfirmationDialog}\n            setAccepted={setAccepted}\n            message='Are you sure you want to remove this education?'\n          />\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from 'react';\nimport {\n  Grid,\n  TextField,\n  InputAdornment,\n  Button,\n  IconButton,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport EditProfileTheme from '../EditProfileTheme';\nimport ConfirmationDialog from '../../shared/ConfirmationDialog';\n\nimport { useRecoilState } from 'recoil';\nimport { profileState } from '../../../atoms';\n\nexport default function ProjectDetails() {\n  const classes = EditProfileTheme();\n  const [profile, setProfile] = useRecoilState(profileState);\n\n  // ******** for the confirmation doalog\n  const [openConfirmationDialog, setOpenConfirmationDialog] = React.useState(\n    false\n  );\n  const handleClickOpenConfirmationDialog = () => {\n    setOpenConfirmationDialog(true);\n  };\n  const handleCloseConfirmationDialog = () => {\n    setOpenConfirmationDialog(false);\n  };\n  const [accepted, setAccepted] = React.useState(false);\n  // ****************\n\n  const handleChange = (e, index, type) => {\n    // idk why I have to do this\n    // doesnt lets me change directly like\n    // projects[index].name = e.target.value\n    // read only property error\n    let projects = [...profile.projects];\n    let project = { ...projects[index] };\n\n    if (type === 'name') {\n      project.name = e.target.value;\n    } else if (type === 'description') {\n      project.description = e.target.value;\n    } else if (type === 'gitLink') {\n      project.gitLink = e.target.value;\n    }\n    projects[index] = project;\n    setProfile({ ...profile, projects });\n  };\n\n  const addProject = () => {\n    setProfile({\n      ...profile,\n      projects: [\n        ...profile.projects,\n        { name: '', description: '', gitLink: '' },\n      ],\n    });\n  };\n\n  // **** Deleting a project\n  const [Index, setIndex] = React.useState(0);\n  React.useEffect(() => {\n    if (!accepted) return;\n\n    let projects = [...profile.projects];\n    projects.splice(Index, 1);\n    setProfile({ ...profile, projects });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [accepted]);\n\n  const removeProject = index => {\n    setAccepted(false);\n    setIndex(index);\n    handleClickOpenConfirmationDialog(index);\n  };\n  // *****\n\n  return (\n    <Accordion elevation={0} defaultExpanded>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls='panel1a-content'\n        id='panel1a-header'\n        className={classes.accordion}\n      >\n        <Typography className={classes.heading}>Projects</Typography>\n      </AccordionSummary>\n\n      <AccordionDetails className={classes.accordion}>\n        <Grid container spacing={3}>\n          {profile.projects.map((project, index) => (\n            // using index as key because key needs to remain same otherwise it loses focus on change\n            <React.Fragment key={index}>\n              <Grid item xs={12}>\n                <TextField\n                  variant='outlined'\n                  value={project.name}\n                  onChange={e => {\n                    handleChange(e, index, 'name');\n                  }}\n                  label='Project Name'\n                  fullWidth\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position='end'>\n                        <IconButton\n                          onClick={() => {\n                            removeProject(index);\n                          }}\n                          className={classes.iconContainer}\n                        >\n                          <img\n                            src='/images/delete.svg'\n                            alt='delete'\n                            className={classes.endIcon}\n                          />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  multiline\n                  label='Project Description'\n                  variant='outlined'\n                  value={project.description}\n                  onChange={e => {\n                    handleChange(e, index, 'description');\n                  }}\n                  fullWidth\n                  helperText='Separate points by new line'\n                />\n              </Grid>\n\n              {/* Git Link */}\n              <Grid\n                item\n                xs={12}\n                // no bottom margin in case of last project\n                className={\n                  index !== profile.projects.length - 1\n                    ? classes.sectionContainer\n                    : null\n                }\n              >\n                <TextField\n                  label='Git Link'\n                  variant='outlined'\n                  value={project.gitLink}\n                  onChange={e => {\n                    handleChange(e, index, 'gitLink');\n                  }}\n                  fullWidth\n                />\n              </Grid>\n            </React.Fragment>\n          ))}\n\n          <Grid item xs={12} style={{ padding: 0 }}></Grid>\n          <Grid item xs={12} sm={4}>\n            <Button\n              fullWidth\n              variant='contained'\n              className={classes.addButton}\n              onClick={addProject}\n            >\n              {profile.skills.length ? 'Add another project' : 'Add project'}\n            </Button>\n          </Grid>\n\n          <ConfirmationDialog\n            openConfirmationDialog={openConfirmationDialog}\n            handleCloseConfirmationDialog={handleCloseConfirmationDialog}\n            setAccepted={setAccepted}\n            message='Are you sure you want to remove this project?'\n          />\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from 'react';\nimport {\n  Grid,\n  TextField,\n  InputAdornment,\n  Button,\n  IconButton,\n  FormControlLabel,\n  useTheme,\n  useMediaQuery,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Checkbox,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MomentUtils from '@date-io/moment';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport EditProfileTheme from '../EditProfileTheme';\nimport ConfirmationDialog from '../../shared/ConfirmationDialog';\n\nimport { useRecoilState } from 'recoil';\nimport { profileState } from '../../../atoms';\n\nexport default function ExperienceDetails() {\n  const classes = EditProfileTheme();\n  const [profile, setProfile] = useRecoilState(profileState);\n  const theme = useTheme();\n  const smallerThanSm = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // ******** for the confirmation doalog\n  const [openConfirmationDialog, setOpenConfirmationDialog] = React.useState(\n    false\n  );\n  const handleClickOpenConfirmationDialog = () => {\n    setOpenConfirmationDialog(true);\n  };\n  const handleCloseConfirmationDialog = () => {\n    setOpenConfirmationDialog(false);\n  };\n  const [accepted, setAccepted] = React.useState(false);\n  // ****************\n\n  const handleChange = (e, index, type) => {\n    let experiences = [...profile.experiences];\n    let experience = {\n      ...experiences[index],\n    };\n\n    if (type === 'role') {\n      experience.role = e.target.value;\n    } else if (type === 'name') {\n      experience.name = e.target.value;\n    } else if (type === 'currentlyWorking') {\n      experience.currentlyWorking = !experience.currentlyWorking;\n    }\n\n    experiences[index] = experience;\n    setProfile({\n      ...profile,\n      experiences,\n    });\n  };\n\n  const handleDateChange = (newDate, index, type) => {\n    let experiences = [...profile.experiences];\n    let experience = {\n      ...experiences[index],\n    };\n\n    if (type === 'from') {\n      try {\n        experience.timeFrom = newDate.toDate();\n      } catch (error) {\n        experience.timeFrom = null;\n      }\n    } else {\n      try {\n        experience.timeTo = newDate.toDate();\n      } catch (error) {\n        experience.timeTo = null;\n      }\n    }\n\n    experiences[index] = experience;\n    setProfile({\n      ...profile,\n      experiences,\n    });\n  };\n\n  const addExperience = () => {\n    setProfile({\n      ...profile,\n      experiences: [\n        ...profile.experiences,\n        {\n          role: '',\n          name: '',\n          currentlyWorking: false,\n          timeFrom: Date.now(),\n          timeTo: Date.now(),\n        },\n      ],\n    });\n  };\n\n  // **** Deleting an experience\n  const [Index, setIndex] = React.useState(0);\n  React.useEffect(() => {\n    if (!accepted) return;\n\n    let experiences = [...profile.experiences];\n    experiences.splice(Index, 1);\n    setProfile({ ...profile, experiences });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [accepted]);\n\n  const removeExperience = index => {\n    setAccepted(false);\n    setIndex(index);\n    handleClickOpenConfirmationDialog(index);\n  };\n  // *****\n\n  return (\n    <Accordion elevation={0} defaultExpanded>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls='panel1a-content'\n        id='panel1a-header'\n        className={classes.accordion}\n      >\n        <Typography className={classes.heading}>Experiences</Typography>\n      </AccordionSummary>\n\n      <AccordionDetails className={classes.accordion}>\n        <Grid container spacing={5}>\n          {profile.experiences.map((experience, index) => (\n            <Grid item xs={12} sm={6} key={index}>\n              <Grid container spacing={3}>\n                {/* Role Name */}\n                <Grid item xs={12}>\n                  <TextField\n                    label='Role'\n                    variant='outlined'\n                    value={experience.role}\n                    onChange={e => {\n                      handleChange(e, index, 'role');\n                    }}\n                    fullWidth\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position='end'>\n                          <IconButton\n                            onClick={() => {\n                              removeExperience(index);\n                            }}\n                            className={classes.iconContainer}\n                          >\n                            <img\n                              src='/images/delete.svg'\n                              alt='delete'\n                              className={classes.endIcon}\n                            />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n\n                {/* Company Name */}\n                <Grid item xs={12}>\n                  <TextField\n                    label='Company Name'\n                    variant='outlined'\n                    value={experience.name}\n                    onChange={e => {\n                      handleChange(e, index, 'name');\n                    }}\n                    fullWidth\n                  />\n                </Grid>\n\n                {/* Time From */}\n                <Grid item xs={12} sm={6}>\n                  <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <KeyboardDatePicker\n                      fullWidth\n                      label='Time From'\n                      inputVariant='outlined'\n                      views={(['year'], ['month'])}\n                      variant='inline'\n                      format=' MMM yyyy'\n                      value={experience.timeFrom}\n                      onChange={newDate => {\n                        handleDateChange(newDate, index, 'from');\n                      }}\n                      keyboardIcon={\n                        <img\n                          src='/images/date.svg'\n                          alt='date'\n                          className={classes.icon}\n                        />\n                      }\n                    />\n                  </MuiPickersUtilsProvider>\n                </Grid>\n\n                {/* Time To */}\n                <Grid item xs={12} sm={6}>\n                  <MuiPickersUtilsProvider utils={MomentUtils}>\n                    <KeyboardDatePicker\n                      fullWidth\n                      disabled={experience.currentlyWorking}\n                      label='Time To'\n                      inputVariant='outlined'\n                      views={(['year'], ['month'])}\n                      variant='inline'\n                      format=' MMM yyyy'\n                      value={experience.timeTo}\n                      onChange={newDate => {\n                        handleDateChange(newDate, index, 'to');\n                      }}\n                      keyboardIcon={\n                        <img\n                          src='/images/date.svg'\n                          alt='date'\n                          className={classes.icon}\n                        />\n                      }\n                    />\n                  </MuiPickersUtilsProvider>\n                </Grid>\n\n                <Grid\n                  item\n                  xs={12}\n                  // no bottom margin in case of last row\n                  // no of rows  * no of elements in each row (2) - ( 1 + 2);\n                  // 1 for index, 2 for elements in each row\n                  className={\n                    // since only 1 item in a row ifs sreen width is smaller than sm\n                    smallerThanSm\n                      ? index < profile.experiences.length - 1\n                        ? classes.sectionContainer\n                        : null\n                      : index <=\n                        Math.ceil(profile.experiences.length / 2) * 2 - 3\n                      ? classes.sectionContainer\n                      : null\n                  }\n                >\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        color='secondary'\n                        checked={experience.currentlyWorking}\n                        onChange={e => {\n                          handleChange(e, index, 'currentlyWorking');\n                        }}\n                        name='checkedF'\n                      />\n                    }\n                    label='Currently Working Here'\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          ))}\n\n          <Grid item xs={12} style={{ padding: 0 }}></Grid>\n          <Grid item xs={12} sm={4}>\n            <Button\n              fullWidth\n              variant='contained'\n              className={classes.addButton}\n              onClick={addExperience}\n            >\n              {profile.experiences.length\n                ? 'Add another experience'\n                : 'Add experience'}\n            </Button>\n          </Grid>\n        </Grid>\n\n        <ConfirmationDialog\n          openConfirmationDialog={openConfirmationDialog}\n          handleCloseConfirmationDialog={handleCloseConfirmationDialog}\n          setAccepted={setAccepted}\n          message='Are you sure you want to remove this experience?'\n        />\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from 'react';\nimport {\n  Grid,\n  TextField,\n  IconButton,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n  InputAdornment,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport EditProfileTheme from './EditProfileTheme';\n\nimport ConfirmationDialog from '../shared/ConfirmationDialog';\n\nimport { useRecoilState } from 'recoil';\nimport { profileState } from '../../atoms';\n\nexport default function ResumeDetails() {\n  const classes = EditProfileTheme();\n  const [profile, setProfile] = useRecoilState(profileState);\n\n  // ******** for the confirmation doalog\n  const [openConfirmationDialog, setOpenConfirmationDialog] = React.useState(\n    false\n  );\n  const handleClickOpenConfirmationDialog = () => {\n    setOpenConfirmationDialog(true);\n  };\n  const handleCloseConfirmationDialog = () => {\n    setOpenConfirmationDialog(false);\n  };\n  const [accepted, setAccepted] = React.useState(false);\n  // ****************\n\n  React.useEffect(() => {\n    if (!accepted) return;\n    setProfile({\n      ...profile,\n      resume: '',\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [accepted]);\n\n  const clearResume = () => {\n    setAccepted(false);\n    handleClickOpenConfirmationDialog();\n  };\n\n  return (\n    <Accordion elevation={0} defaultExpanded>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls='panel1a-content'\n        id='panel1a-header'\n        className={classes.accordion}\n      >\n        <Typography className={classes.heading}>Resume</Typography>\n      </AccordionSummary>\n\n      <AccordionDetails className={classes.accordion}>\n        <Grid item xs={12}>\n          <TextField\n            variant='outlined'\n            value={profile.resume}\n            name='resume'\n            onChange={e => {\n              setProfile({\n                ...profile,\n                resume: e.target.value,\n              });\n            }}\n            fullWidth\n            label='Resume URL'\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position='start'>\n                  <img\n                    className={classes.icon}\n                    src='/images/resume.svg'\n                    alt='resume'\n                  />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position='end'>\n                  <IconButton\n                    onClick={clearResume}\n                    className={classes.iconContainer}\n                  >\n                    <img\n                      className={classes.endIcon}\n                      src='/images/clear.svg'\n                      alt='clear'\n                    />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            placeholder='Resume URL'\n          />\n        </Grid>\n\n        <ConfirmationDialog\n          openConfirmationDialog={openConfirmationDialog}\n          handleCloseConfirmationDialog={handleCloseConfirmationDialog}\n          setAccepted={setAccepted}\n          message='Are you sure you want to clear the resume URL?'\n        />\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from 'react';\nimport { Grid, Paper, Typography, Button } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport EditProfileTheme from './EditProfileTheme';\n\nimport SocialMedia from './SocialMediaDetails';\nimport Personal from './PersonalDetails';\nimport Skills from './ProfessionalDetailComponents/SkillDetails';\nimport Education from './ProfessionalDetailComponents/EducationDetails';\nimport Projects from './ProfessionalDetailComponents/ProjectDetails';\nimport Experiences from './ProfessionalDetailComponents/ExperienceDetails';\nimport Resume from './ResumeDetails';\nimport Footer from '../Footer/Footer';\nimport NavBar from '../NavBar/NavBar';\n\nimport LoadingAnimation from '../Loading/LoadingAnimation';\nimport ToastNotification from '../shared/ToastNotification';\n\n// Authentication\nimport { useRecoilState } from 'recoil';\nimport { profileState } from '../../atoms';\nimport getCurrentUserProfile from '../../services/getCurrentUserProfile';\nimport setAuthToken from '../../utils/setAuthToken';\nimport getUserFromTken from '../../services/getUserFromToken';\nimport axios from 'axios';\n\nexport default function EditProfile() {\n  const classes = EditProfileTheme();\n  const [profile, setProfile] = useRecoilState(profileState);\n  const [user, setUser] = React.useState(null);\n  const [newProfile, setNewProfile] = React.useState(false);\n  const history = useHistory();\n\n  const emptyState = {\n    smallDescription: '',\n    about: '',\n    resume: '',\n    image: '',\n    loc: {\n      city: '',\n      country: '',\n    },\n    connect: {\n      facebook: '',\n      instagram: '',\n      linkedin: '',\n      github: '',\n      twitter: '',\n      steam: '',\n    },\n    skills: [],\n    education: [],\n    projects: [],\n    experiences: [],\n  };\n\n  React.useEffect(() => {\n    (async () => {\n      setAuthToken(localStorage.getItem('token'));\n      const profileData = await getCurrentUserProfile();\n      const userData = await getUserFromTken();\n      setUser(userData);\n\n      if (!profileData) {\n        setNewProfile(true);\n        setProfile(emptyState);\n      } else {\n        setProfile(profileData);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //  **** for the toast notification\n  const [message, setMessage] = React.useState('');\n  const [severity, setSeverity] = React.useState('');\n\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: 'bottom',\n    horizontal: 'right',\n  });\n\n  const showToast = () => {\n    setState({ ...state, open: true });\n  };\n\n  const closeToast = () => {\n    setState({ ...state, open: false });\n  };\n  // ****\n\n  const handleSubmit = () => {\n    (async () => {\n      let formData = new FormData();\n\n      const arr = Object.entries(profile);\n      for (const [key, value] of arr) {\n        if (key === 'image' && value instanceof File) {\n          // only if the file was uploaded\n          formData.append('image', value, 'resume.pdf');\n        } else {\n          formData.append(key, JSON.stringify(value));\n        }\n      }\n\n      // the below code is just for logging formData to test. As formData can't be logged\n      // https://github.com/meteor/meteor/issues/8125#issuecomment-402706641\n\n      // for (const key of formData.entries()) {\n      //   console.log(key[0] + ', ' + key[1]);\n      // }\n\n      try {\n        setMessage('Please wait, updating your profile');\n        setSeverity('info');\n        showToast(); // just a large enough time to upload\n\n        const response = await axios.post('/api/profile', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n        setProfile(response.data);\n        setMessage('Profile updated successfully');\n        setSeverity('success');\n      } catch (error) {\n        setMessage('Failed to update profile');\n        setSeverity('error');\n      }\n\n      showToast();\n      setTimeout(() => {\n        history.go();\n      }, 1500);\n    })();\n  };\n\n  return (\n    <React.Fragment>\n      {Object.keys(profile).length ? (\n        <React.Fragment>\n          <ToastNotification\n            state={state}\n            closeToast={closeToast}\n            message={message}\n            severity={severity}\n          />\n\n          <NavBar editPage />\n\n          <Grid\n            container\n            spacing={5}\n            justify='space-around'\n            className={classes.container}\n          >\n            <Paper className={classes.paper} elavation={10}>\n              <Grid item xs={12}>\n                {user && (\n                  <Typography\n                    variant='h4'\n                    className={classes.topText}\n                  >{`Hello ${user.name}, edit your profile.`}</Typography>\n                )}\n              </Grid>\n              {!newProfile && (\n                <Grid container>\n                  <Grid item xs={false} sm={4}></Grid>\n                  <Grid item xs={12} sm={4}>\n                    <Button\n                      fullWidth\n                      variant='contained'\n                      className={classes.addButton}\n                      component={Link}\n                      to='/profile/me'\n                    >\n                      Visit your profile\n                    </Button>\n                  </Grid>\n                  <Grid item xs={false} sm={4}></Grid>\n                </Grid>\n              )}\n\n              <Personal />\n\n              <SocialMedia />\n\n              <Skills />\n\n              <Education />\n\n              <Projects />\n\n              <Experiences />\n\n              <Resume />\n\n              <Grid\n                item\n                xs={12}\n                sm={4}\n                className={classes.submitButtonContainer}\n              >\n                <Button\n                  fullWidth\n                  variant='contained'\n                  className={classes.submitButton}\n                  onClick={handleSubmit}\n                >\n                  {newProfile ? 'Create' : 'Update'} Profile\n                </Button>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Footer />\n        </React.Fragment>\n      ) : (\n        <LoadingAnimation />\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react'\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props => !localStorage.getItem('token') ? <Redirect to='login' /> : <Component {...props} />}\n    />\n  )\n}\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport User from './components/User/User';\nimport Register from './components/Register/Register';\nimport Login from './components/Login/Login';\nimport EditProfile from './components/EditProfile/EditProfile';\nimport PrivateRoute from './PrivateRoute';\n\n// Authentication\nimport { useRecoilState } from 'recoil';\nimport { authState } from './atoms';\nimport setAuthToken from './utils/setAuthToken';\nimport getUserFromToken from './services/getUserFromToken';\n\nexport default function App() {\n  const [auth, setAuth] = useRecoilState(authState);\n\n  React.useEffect(() => {\n    if (localStorage.getItem('token')) {\n      // redirection is also handled in register an login\n\n      (async () => {\n        const token = localStorage.getItem('token');\n        setAuthToken(token);\n        const user = auth.user ? auth.user : await getUserFromToken();\n\n        setAuth({\n          ...auth,\n          token,\n          isAuthenticated: true,\n          user,\n        });\n      })();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Switch>\n      <Route exact path='/user/:id' render={props => <User {...props} />} />\n      <Route exact path='/register' render={props => <Register {...props} />} />\n      <Route exact path='/login' render={props => <Login {...props} />} />\n      <PrivateRoute exact path='/profile/me' component={User} />\n      <PrivateRoute exact path='/edit' component={EditProfile} />\n      {!auth.isAuthenticated ? (\n        <Redirect to='/login' />\n      ) : (\n        <Redirect to='/edit' />\n      )}\n    </Switch>\n  );\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport createPallete from '@material-ui/core/styles/createPalette';\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints';\n\nconst purpleDark = '#27273C'; // this color is at the top of the animation\nconst lightPurple = '#86377B'; //bottom of the animation\nconst grey = '#F9F9F9';\nconst blue = '#007CFE'; // from the coding image\nconst darkGrey = '#2D2D2D'; // stackoverflow dark page\n\nconst defaultTextFieldColor = 'rgba(0, 0, 0, 0.23)';\n\nconst breakpoints = createBreakpoints({});\nconst palette = createPallete({});\n\nconst Theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purpleDark,\n    },\n    additional: {\n      lightPurple,\n      grey,\n      blue,\n      darkGrey,\n      defaultTextFieldColor,\n    },\n  },\n  typography: {\n    h4: {\n      fontFamily: 'Sacramento',\n      fontSize: '2.5rem',\n    },\n    tab: {\n      textTransform: 'none',\n    },\n    heading: {\n      fontSize: '3em',\n      fontWeight: 700,\n      color: 'white',\n      [breakpoints.down('xs')]: {\n        fontSize: '2em',\n      },\n      [breakpoints.down('md')]: {\n        fontSize: '2.5em',\n      },\n    },\n    subHeading: {\n      fontSize: '1.5em',\n      fontWeight: 500,\n      color: 'white',\n      [breakpoints.down('xs')]: {\n        fontSize: '1.3em',\n      },\n    },\n    text: {\n      fontSize: '1em',\n      letterSpacing: '0.8px',\n      color: 'white',\n    },\n  },\n  transitions: {\n    hovered: {\n      boxShadow: '0px 10px 26px 0px rgba(0,0,0,0.8)',\n      transform: 'scale(1.001)',\n    },\n\n    // **** these 3 are for progress bar\n    root: {\n      height: 5,\n      borderRadius: 3,\n    },\n    colorPrimary: {\n      backgroundColor: palette.grey[palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: blue,\n    },\n    // ****\n  },\n  overrides: {\n    MuiOutlinedInput: {\n      root: {\n        position: 'relative',\n        '& $notchedOutline': {\n          borderColor: defaultTextFieldColor, //default color\n        },\n        '&:hover:not($disabled):not($focused):not($error) $notchedOutline': {\n          borderColor: blue,\n          '@media (hover: none)': {\n            borderColor: defaultTextFieldColor,\n          },\n        },\n        '&$focused $notchedOutline': {\n          borderColor: blue,\n          borderWidth: 1,\n        },\n      },\n    },\n    MuiFormLabel: {\n      root: {\n        '&$error': {\n          color: 'red',\n        },\n        '&$focused': {\n          color: blue,\n        },\n      },\n    },\n    MuiCheckbox: {\n      colorSecondary: {\n        // color: '# custom color',\n        '&$checked': {\n          color: blue,\n        },\n      },\n    },\n  },\n});\n\nexport default Theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { RecoilRoot } from 'recoil';\nimport Theme from './Theme';\n\nReactDOM.render(\n  <RecoilRoot>\n    <Router>\n      <ThemeProvider theme={Theme}>\n        <App />\n      </ThemeProvider>\n    </Router>\n  </RecoilRoot>,\n  document.getElementById('root')\n);\n","import { makeStyles } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\n\nconst useStyles = makeStyles(theme => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n  },\n  appBar: {},\n  name: {\n    marginLeft: '1em',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '2em',\n    },\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-40%)',\n    cursor: 'pointer',\n  },\n  tabContainer: {\n    marginLeft: 'auto',\n  },\n  tab: {\n    ...theme.typography.tab,\n    minWidth: 10,\n    marginLeft: 25,\n    opacity: 0.5,\n    '&:hover': {\n      opacity: 1,\n      transform: 'scale(1.3)',\n    },\n  },\n  tabSelected: {\n    transform: 'scale(1.3)',\n  },\n  icon: {\n    verticalAlign: 'text-bottom',\n    marginRight: 5,\n    height: 25,\n    width: 25,\n  },\n  drawerContainer: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  drawerIconContainer: {\n    marginLeft: 'auto',\n    padding: 0,\n  },\n  drawerIcon: {\n    height: 35,\n    width: 35,\n  },\n  drawerList: {\n    width: '65%',\n  },\n  closeButton: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 'auto',\n    marginRight: 30,\n  },\n  drawerTab: {\n    color: '#ffffff',\n    opacity: 0.5,\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 auto',\n  },\n  drawerTabSelected: {\n    opacity: 1,\n    backgroundColor: 'transparent !important',\n  },\n  logOutButton: {\n    fontSize: '1.3em',\n    color: '#fff',\n    marginLeft: 'auto',\n    textTransform: 'none',\n    backgroundColor: red[500],\n    '&:hover': {\n      backgroundColor: red[500],\n    },\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '1em',\n    },\n  },\n}));\n\nexport default useStyles;\n","const routeOptions = ['home', 'about', 'profile', 'projects', 'contact'];\n\nexport default routeOptions;\n"],"sourceRoot":""}